{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/build/build-detail/build-detail.component.ts","./src/app/components/build/build-detail/build-detail.component.html","./src/app/components/build/build-history/build-history.component.ts","./src/app/components/build/build-history/build-history.component.html","./src/app/components/build/build-template/build-template.component.ts","./src/app/components/build/build-template/build-template.component.html","./src/app/components/build/build/build.component.ts","./src/app/components/build/build/build.component.html","./src/app/components/configs/git-configs/git-configs.component.ts","./src/app/components/configs/git-configs/git-configs.component.html","./src/app/components/configs/static-configs/static-configs.component.ts","./src/app/components/configs/static-configs/static-configs.component.html","./src/app/components/create-project/create-project.component.ts","./src/app/components/create-project/create-project.component.html","./src/app/components/environments/env-details/env-details.component.ts","./src/app/components/environments/env-details/env-details.component.html","./src/app/components/environments/env-list/env-list.component.ts","./src/app/components/environments/env-list/env-list.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/registration/login/login.component.ts","./src/app/components/registration/login/login.component.html","./src/app/services/data-service.ts","./src/app/services/http-service.ts","./src/app/services/local-storage-service.ts","./src/app/utils/global-constants.ts","./src/app/utils/strings-eng.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// import pages for routing\nimport { LoginComponent } from './components/registration/login/login.component';\nimport { GitConfigsComponent } from './components/configs/git-configs/git-configs.component';\nimport { StaticConfigsComponent } from './components/configs/static-configs/static-configs.component';\nimport { EnvListComponent } from './components/environments/env-list/env-list.component';\nimport { BuildHistoryComponent } from './components/build/build-history/build-history.component';\nimport { BuildDetailComponent } from './components/build/build-detail/build-detail.component';\nimport { BuildComponent } from './components/build/build/build.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n    data: { title: 'Login or Sign up' },\n  },\n  {\n    path: '',\n    component: BuildHistoryComponent,\n    data: { title: 'Simplifying CI' },\n  },\n  {\n    path: 'git-configs',\n    component: GitConfigsComponent,\n    data: { title: 'Git Configs' },\n  },\n  {\n    path: 'static-configs',\n    component: StaticConfigsComponent,\n    data: { title: 'Project Static Configs' },\n  },\n  {\n    path: 'environments',\n    component: EnvListComponent,\n    data: { title: 'Project Environments' },\n  },\n  {\n    path: 'build-template',\n    component: BuildComponent,\n    data: { title: 'Build Template' },\n  },\n  {\n    path: 'build-history',\n    component: BuildHistoryComponent,\n    data: { title: 'Build History' },\n  },\n  {\n    path: 'build-detail/:build_id',\n    component: BuildDetailComponent,\n    data: { title: 'Build Details' },\n  },\n  { path: '**', redirectTo: '/' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from './services/local-storage-service';\nimport { GlobalConstants } from './utils/global-constants';\nimport { DataService } from './services/data-service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private localStorageService: LocalStorageService,\n    private router: Router,\n    private dataService: DataService\n  ) {}\n\n  // global vars\n  accessToken = this.localStorageService.getValueFromLocalStorage(\n    GlobalConstants.LS_KEY_ACCESS_TOKEN\n  );\n  isLoading = false; // for loading bar + overlay\n\n  title = 'mobile-ci';\n\n  ngOnInit(): void {\n    // get access token from local storage\n\n    // TEMP accessToken\n    // accessToken = \"test\"\n\n    // if (this.accessToken == null) {\n    //   // no access token - login/register\n    //   this.router.navigate(['/login']);\n    // } else {\n    //   // got access token - go to address\n    //   this.router.navigate(['/']);\n    // }\n\n    // subscribe to global obs\n    this.dataService.isLoadingObs.subscribe(\n      (isLoading) => (this.isLoading = isLoading)\n    );\n  }\n}\n","<!-- loading bar -->\n<mat-progress-bar class=\"loading-bar\" *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n\n<!-- overlay -->\n<div class=\"overlay\" *ngIf=\"isLoading\"></div>\n\n<app-login *ngIf=\"accessToken == null\"></app-login>\n\n<app-home *ngIf=\"accessToken != null\"></app-home>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\n// UI\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\n// services\nimport { AppRoutingModule } from './app-routing.module';\nimport { StorageServiceModule } from  'ngx-webstorage-service';\nimport { LocalStorageService } from  './services/local-storage-service';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { DataService } from './services/data-service';\nimport {HttpService} from './services/http-service';\n\n// main landing page - route to respective pages based on session in localStorage\nimport { AppComponent } from './app.component';\n\n// pages\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/registration/login/login.component';\nimport { CreateProjectComponent } from './components/create-project/create-project.component';\nimport { StaticConfigsComponent } from './components/configs/static-configs/static-configs.component';\nimport { GitConfigsComponent } from './components/configs/git-configs/git-configs.component';\nimport { EnvListComponent } from './components/environments/env-list/env-list.component';\nimport { EnvDetailsComponent } from './components/environments/env-details/env-details.component';\nimport { BuildHistoryComponent } from './components/build/build-history/build-history.component';\nimport { BuildTemplateComponent } from './components/build/build-template/build-template.component';\nimport { BuildComponent } from './components/build/build/build.component';\nimport { BuildDetailComponent } from './components/build/build-detail/build-detail.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    CreateProjectComponent,\n    StaticConfigsComponent,\n    GitConfigsComponent,\n    EnvListComponent,\n    EnvDetailsComponent,\n    BuildHistoryComponent,\n    BuildTemplateComponent,\n    BuildComponent,\n    BuildDetailComponent\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    StorageServiceModule,\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatCardModule,\n    MatTabsModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatProgressBarModule,\n    MatListModule,\n    MatButtonToggleModule,\n    MatSnackBarModule,\n    ClipboardModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule\n  ],\n  providers: [\n    LocalStorageService,\n    DataService,\n    HttpService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DataService } from 'src/app/services/data-service';\nimport { HttpService } from 'src/app/services/http-service';\nimport { GlobalConstants } from 'src/app/utils/global-constants';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Project } from 'src/app/models/project';\nimport { BuildDetail } from 'src/app/models/build-detail';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription, interval, BehaviorSubject } from 'rxjs';\nimport { StringsEng } from 'src/app/utils/strings-eng';\n\n@Component({\n  selector: 'app-build-detail',\n  templateUrl: './build-detail.component.html',\n  styleUrls: ['./build-detail.component.css'],\n})\nexport class BuildDetailComponent implements OnInit, OnDestroy {\n  constructor(\n    private dataService: DataService,\n    private httpService: HttpService,\n    private _snackbar: MatSnackBar,\n    private route: ActivatedRoute\n  ) {}\n\n  buildId: string;\n  currentProject: Project;\n\n  // observables (destroy onDestroy)\n  private currentProjSub: Subscription;\n  private routeSub: Subscription;\n\n  // observable status (for stopping intervals)\n  private buildStatusSub: Subscription;\n  private buildStatusBS = new BehaviorSubject('');\n  private buildStatusObs = this.buildStatusBS.asObservable();\n  setBuildStatus(buildStatus: string) {\n    this.buildStatusBS.next(buildStatus);\n  }\n\n  // polling interval\n  pollingIntervalMillis: number = 5000;\n\n  // build details\n  buildDetails: BuildDetail;\n  buildDetailsTimer: Subscription;\n\n  // for jenkins polling\n  jenkinsBuildNo: number;\n  jenkinsBuildNoTimer: Subscription;\n\n  // jenkinsConsole\n  consoleOutputTimer: Subscription;\n  consoleOutput: string;\n\n  ngOnInit(): void {\n    this.routeSub = this.route.paramMap.subscribe((params) => {\n      this.buildId = params.get('build_id');\n\n      // setup observer for build status\n      this.buildStatusSub = this.buildStatusObs.subscribe(\n        (buildStatus: string) => {\n          // only check if build status has value\n          if (buildStatus == null || buildStatus == '') return;\n\n          // cancel all intervals if status changed to fail/success\n          if (!this.shouldPollBasedOnStatus()) {\n            this.stopAllPolling();\n          }\n        }\n      );\n\n      // start polling for build details first\n      this.startBuildDetailsPolling();\n    });\n\n    this.currentProjSub = this.dataService.currentProjectObs.subscribe(\n      (project: Project) => {\n        if (project != null) {\n          this.currentProject = project;\n        }\n      }\n    );\n  }\n\n  //=== UI funcs\n  getStatusText(item: BuildDetail): string {\n    switch (item.status) {\n      case 'building': // primary blue\n        return 'Building...';\n\n      case 'pending': // orange\n        return 'Build pending';\n\n      case 'success': // green\n        return 'Build succeeded!';\n\n      case 'failed': // red\n        return 'Build failed';\n    }\n  }\n\n  getStatusColour(item: BuildDetail): string {\n    switch (item.status.toLowerCase()) {\n      case 'building': // primary blue\n        return 'primary';\n\n      case 'pending': // orange\n        return 'warning';\n\n      case 'success': // green\n        return 'success';\n\n      case 'failed': // red\n        return 'danger';\n    }\n  }\n\n  getStatusIcon(item: BuildDetail): string {\n    switch (item.status.toLowerCase()) {\n      case 'building': // primary blue\n        return 'cached';\n\n      case 'pending': // orange\n        return 'history';\n\n      case 'success': // green\n        return 'check_circle_outline';\n\n      case 'failed': // red\n        return 'cancel';\n    }\n  }\n\n  isStatusPendingBuilding(item: BuildDetail): boolean {\n    switch (item.status.toLowerCase()) {\n      case 'pending':\n      case 'building':\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  getBuildDuration(item: BuildDetail): string {\n    let minutes = item.build_minutes;\n\n    var hrStr = '00';\n    var minStr = '00';\n    if (minutes == null || minutes == 0) {\n    } else {\n      let hr = Math.floor(minutes / 60);\n      let min = minutes - hr * 60;\n\n      hrStr = hr.toString();\n      minStr = min.toString();\n\n      if (hrStr.length < 2) hrStr = `0${hrStr}`;\n      if (minStr.length < 2) minStr = `0${minStr}`;\n    }\n\n    return `${hrStr} hr : ${minStr} min`;\n  }\n\n  shouldShowConsoleLoading(): boolean {\n    return (\n      this.consoleOutput == null ||\n      this.buildDetails.status == 'pending' ||\n      this.buildDetails.status == 'building'\n    );\n  }\n\n  //=== http for cancel/rebuild\n  async rebuildOnClick() {\n    this.dataService.setIsLoading(true);\n\n    // build form body json\n    let formBody = {\n      project_id: this.currentProject.project_id,\n      build_id: this.buildDetails.build_id,\n    };\n\n    var resp;\n    if (this.currentProject.platform == 'ios') {\n      resp = await this.httpService.httpPostWithHeader(\n        GlobalConstants.HTTP_REBUILD_URL,\n        formBody\n      );\n    } else {\n      // android\n    }\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      // go to build detail page if resp success\n      window.location.href = `/build-detail/${resp.data.build_id}`;\n    }\n  }\n\n  async cancelBuildOnClick() {\n    if (confirm(StringsEng.CANCEL_BUILD_CONFIRM(this.buildDetails.build_no))) {\n      this.dataService.setIsLoading(true);\n\n    // build form body json\n    let formBody = {\n      platform: this.currentProject.platform,\n      build_id: this.buildDetails.build_id,\n    };\n\n    var resp;\n    if (this.currentProject.platform == 'ios') {\n      resp = await this.httpService.httpPostWithHeader(\n        GlobalConstants.HTTP_STOP_BUILD_URL,\n        formBody\n      );\n    } else {\n      // android\n    }\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      this._snackbar.open(\n        StringsEng.CANCEL_BUILD_SUCCESS(this.buildDetails.build_no),\n        null,\n        {\n          duration: GlobalConstants.SNACKBAR_DURATION_LONG,\n        }\n      );\n\n      // refresh details\n      this.getBuildDetails();\n    }\n    }\n  }\n\n  //=== http funcs for get/polling\n  async getBuildDetails() {\n    var getBuildDetailsURL = GlobalConstants.HTTP_GET_BUILD_DETAILS_URL(\n      this.buildId\n    );\n\n    let resp = await this.httpService.httpGetWithHeader(\n      getBuildDetailsURL,\n      true\n    );\n\n    if (resp.success) {\n      this.buildDetails = resp.data;\n\n      // update build status obs\n      this.setBuildStatus(this.buildDetails.status);\n\n      // start polling for jenkins build number when successfully get build details\n      this.startJenkinsBuildNoPolling();\n    } else {\n      // stop polling on failure (TODO: improve based on error codes)\n      // this.stopBuildDetailsInterval();\n    }\n  }\n\n  // when jenkins build begins, build number will be 0. must keep polling till non-zero,\n  // then only start to get build console\n  async getJenkinsBuildNumber() {\n    var getJenkinsBuildNumberURL = GlobalConstants.HTTP_GET_JENKINS_BUILD_NUMBER_URL(\n      this.buildId\n    );\n\n    let resp = await this.httpService.httpGetWithHeader(\n      getJenkinsBuildNumberURL,\n      true\n    );\n\n    if (resp.success) {\n      this.jenkinsBuildNo = resp.data.build_no;\n\n      // start polling for console only if build number is non-zero\n      if (this.jenkinsBuildNo != 0) this.startConsoleOutpuPolling();\n    } else {\n      // this.stopJenkinsBuildNoInterval();\n    }\n  }\n\n  async getConsoleOutput() {\n    var getConsoleOutputURL = GlobalConstants.HTTP_GET_CONSOLE_OUTPUT_URL(\n      this.buildId,\n      'ios',\n      this.jenkinsBuildNo.toString()\n    );\n\n    // get console using jenkins base url\n    let resp = await this.httpService.httpGetWithHeader(\n      getConsoleOutputURL,\n      true,\n      GlobalConstants.HTTP_BASE_URL,\n      true\n    );\n\n    if (resp.success) {\n      this.consoleOutput = resp.data;\n    } else {\n      // this.stopJenkinsBuildNoInterval();\n    }\n  }\n\n  //=== polling funcs\n  // should ONLY poll if status is building OR pending\n  private shouldPollBasedOnStatus(): boolean {\n    return (\n      this.buildDetails.status == 'building' ||\n      this.buildDetails.status == 'pending'\n    );\n  }\n\n  //=== interval funcs\n  // poll build details for status and duration\n  private startBuildDetailsPolling() {\n    // create timer only once\n    if (this.buildDetailsTimer != undefined) return;\n\n    // get details first time\n    this.getBuildDetails();\n\n    console.log('startBuildDetailsInterval');\n\n    this.buildDetailsTimer = interval(this.pollingIntervalMillis).subscribe(\n      (val) => {\n        console.log('startBuildDetailsInterval polling');\n\n        // don't continue polling if status changes to success/failure\n        if (this.shouldPollBasedOnStatus) this.getBuildDetails();\n        else this.stopBuildDetailsPolling();\n      }\n    );\n  }\n\n  private stopBuildDetailsPolling() {\n    if (this.buildDetailsTimer != undefined)\n      this.buildDetailsTimer.unsubscribe();\n  }\n\n  // poll jenkins build no until non-zero\n  private startJenkinsBuildNoPolling() {\n    // create timer only once\n    if (this.jenkinsBuildNoTimer != undefined) return;\n\n    // get first time\n    this.getJenkinsBuildNumber();\n\n    // don't proceed if status changed\n    if (!this.shouldPollBasedOnStatus()) return;\n\n    console.log(\n      'startJenkinsBuildNoInterval, jenkins buildno = ',\n      this.jenkinsBuildNo\n    );\n\n    this.jenkinsBuildNoTimer = interval(this.pollingIntervalMillis).subscribe(\n      (val) => {\n        console.log(\n          'startJenkinsBuildNoInterval polling, jenkinsNo = ',\n          this.jenkinsBuildNo\n        );\n\n        // only poll if should\n        if (this.shouldPollBasedOnStatus())\n          if (this.jenkinsBuildNo == 0)\n            // only continue polling if build number is zero (stop when non-zero)\n            this.getJenkinsBuildNumber();\n          else {\n            // if jenkins build no is non-zero, stop jenkins inverval and start polling console output\n            this.stopJenkinsBuildNoPolling();\n          }\n        // else stop polling\n        else this.stopJenkinsBuildNoPolling();\n      }\n    );\n  }\n\n  private stopJenkinsBuildNoPolling() {\n    if (this.jenkinsBuildNoTimer != undefined)\n      this.jenkinsBuildNoTimer.unsubscribe();\n  }\n\n  private startConsoleOutpuPolling() {\n    // create timer only once\n    if (this.consoleOutputTimer != undefined) return;\n\n    // get first time\n    this.getConsoleOutput();\n\n    // don't proceed if status xxx\n    if (!this.shouldPollBasedOnStatus()) return;\n\n    console.log('startConsoleOutpuPolling');\n\n    this.consoleOutputTimer = interval(this.pollingIntervalMillis).subscribe(\n      (val) => {\n        console.log('startConsoleOutpuPolling polling');\n\n        if (this.shouldPollBasedOnStatus()) this.getConsoleOutput();\n        else this.stopConsoleOutputPolling();\n      }\n    );\n  }\n\n  private stopConsoleOutputPolling() {\n    if (this.consoleOutputTimer != undefined)\n      this.consoleOutputTimer.unsubscribe();\n  }\n\n  private stopAllPolling() {\n    this.stopBuildDetailsPolling();\n    this.stopJenkinsBuildNoPolling();\n    this.stopConsoleOutputPolling();\n  }\n\n  ngOnDestroy(): void {\n    this.currentProjSub.unsubscribe();\n    this.routeSub.unsubscribe();\n    this.buildStatusSub.unsubscribe();\n\n    this.stopAllPolling();\n  }\n}\n","<div class=\"row p-3\" *ngIf=\"currentProject != null && buildDetails != null\">\n    <div class=\"col pb-3\">\n        <h1>Build Details</h1>\n        <p>Details of this build (#{{buildDetails.build_no}}), including build console output which is updated in\n            real-time. The build status will be updated to \"Success\" once done.</p>\n\n        <div class=\"d-flex\">\n            <button class=\"btn btn-success ml-auto\" type=\"button\" aria-label=\"Rebuild\" (click)=\"rebuildOnClick()\"\n                [disabled]=\"isStatusPendingBuilding(buildDetails)\">\n                Rebuild\n            </button>\n\n            <button class=\"btn btn-danger ml-2\" type=\"button\" aria-label=\"Cancel Build\" (click)=\"cancelBuildOnClick()\" [disabled]=\"!isStatusPendingBuilding(buildDetails)\">\n                Cancel Build\n            </button>\n        </div>\n\n        <mat-card-content class=\"mt-4\">\n            <mat-card class=\"p-4 mb-4\">\n                <table class=\"table table-fit-th table-borderless\">\n                    <tbody>\n                        <tr>\n                            <th class=\"no-wrap align-middle\" scope=\"row\">Build Number</th>\n                            <td class=\"align-middle\">\n                                <div class=\"d-flex align-items-center\">\n                                    #{{buildDetails.build_no}}\n\n                                    <mat-icon class=\"ml-auto\">timer</mat-icon>\n                                    <h3 class=\"ml-1\">{{getBuildDuration(buildDetails)}}</h3>\n\n                                    <mat-icon class=\"ml-4 text-{{getStatusColour(buildDetails)}}\">\n                                        {{getStatusIcon(buildDetails)}}</mat-icon>\n                                    <h4 class=\"ml-1 text-{{getStatusColour(buildDetails)}}\">\n                                        {{getStatusText(buildDetails)}}</h4>\n                                </div>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <th class=\"no-wrap\" scope=\"row\">Project Name</th>\n                            <td>{{currentProject.name}}</td>\n                        </tr>\n\n                        <tr>\n                            <th class=\"no-wrap\" scope=\"row\">Scheme</th>\n                            <td>{{buildDetails.scheme}}</td>\n                        </tr>\n\n                        <tr>\n                            <th class=\"no-wrap\" scope=\"row\">Environment</th>\n                            <td>{{buildDetails.environment}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <hr>\n\n                <table class=\"table table-fit table-borderless\">\n                    <tbody>\n                        <tr>\n                            <th class=\"no-wrap\" scope=\"row\">Testflight Enabled</th>\n                            <td>\n                                <mat-slide-toggle class=\"ml-2\" [checked]=\"buildDetails.testflight_option == '1'\"\n                                    disabled>\n                                </mat-slide-toggle>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <th class=\"no-wrap\" scope=\"row\">Unit Test Enabled</th>\n                            <td>\n                                <mat-slide-toggle class=\"ml-2\" [checked]=\"buildDetails.test_option == '1'\" disabled>\n                                </mat-slide-toggle>\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <th class=\"no-wrap\" scope=\"row\">Enterprise Account</th>\n                            <td>\n                                <mat-slide-toggle class=\"ml-2\" [checked]=\"buildDetails.enterprise_option == '1'\"\n                                    disabled>\n                                </mat-slide-toggle>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <hr>\n\n                <table class=\"table table-fit-th table-borderless\">\n                    <tbody>\n                        <tr>\n                            <th class=\"no-wrap\" scope=\"row\">Git Branch</th>\n                            <td>{{buildDetails.branch}}</td>\n                        </tr>\n\n                        <tr>\n                            <th class=\"no-wrap\" scope=\"row\">Firebase Adhoc Deployment</th>\n                            <td>\n                                <mat-slide-toggle class=\"ml-2\" [checked]=\"buildDetails.adhoc_option == '1'\" disabled>\n                                </mat-slide-toggle>\n                            </td>\n                        </tr>\n\n                        <tr *ngIf=\"buildDetails.adhoc_option == '1'\">\n                            <th class=\"no-wrap\" scope=\"row\">Firebase Distribution Group</th>\n                            <td>{{buildDetails.firebase_distribution_group}}</td>\n                        </tr>\n\n                        <tr>\n                            <th class=\"no-wrap\" scope=\"row\">Release Notes</th>\n                            <td>\n                                <textarea type=\"text\" class=\"form-control\" aria-describedby=\"releaseNotesNote\"\n                                    readonly>{{buildDetails.release_note}}</textarea>\n                                <small id=\"releaseNotesNote\" class=\"form-text text-muted\">If \"Firebase Adhoc Deployment\"\n                                    option was enabled for this build, the .ipa file will be distributed to the\n                                    specified Firebase distribution\n                                    group via Firebase App Distribution, with release notes as shown above.</small>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </mat-card>\n\n            <h1>Build Console Output</h1>\n            <mat-card class=\"p-4 my-4 bg-dark text-light\">\n                <span class=\"px-4\" *ngIf=\"consoleOutput != null\" style=\"white-space: pre-line\">{{consoleOutput}}</span>\n\n                <label class=\"my-2 ml-auto d-flex align-items-center text-light\" *ngIf=\"shouldShowConsoleLoading()\">\n                    <mat-spinner class=\"mr-1\" diameter=\"18\"></mat-spinner>\n                    Loading Console...\n                </label>\n            </mat-card>\n\n        </mat-card-content>\n    </div>\n</div>","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { DataService } from 'src/app/services/data-service';\nimport { HttpService } from 'src/app/services/http-service';\nimport { GlobalConstants } from 'src/app/utils/global-constants';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Subscription } from 'rxjs';\nimport { Project } from 'src/app/models/project';\nimport { BuildDetail } from 'src/app/models/build-detail';\nimport { Router } from '@angular/router';\nimport { StringsEng } from 'src/app/utils/strings-eng';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BuildComponent } from 'src/app/components/build/build/build.component';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-build-history',\n  templateUrl: './build-history.component.html',\n  styleUrls: ['./build-history.component.scss'],\n})\nexport class BuildHistoryComponent implements OnInit, OnDestroy {\n  constructor(\n    private dataService: DataService,\n    private httpService: HttpService,\n    private dialog: MatDialog,\n    private _snackbar: MatSnackBar,\n    private router: Router\n  ) {}\n\n  currentProject: Project;\n\n  // observables (destroy onDestroy)\n  private currentProjSub: Subscription;\n\n  // for pagination\n  totalCount = 0;\n  offset = 0;\n  buildHistoryList: BuildDetail[] = [];\n\n  ngOnInit(): void {\n    this.currentProjSub = this.dataService.currentProjectObs.subscribe(\n      (project: Project) => {\n        if (project != null) {\n          this.currentProject = project;\n\n          // get build history list\n          this.getBuildHistory();\n        }\n      }\n    );\n  }\n\n  // onResume\n  @HostListener('window:focus', ['$event'])\n  onFocus(event) {\n    this.getBuildHistory()\n  }\n\n  //=== UI funcs\n  getStatusText(item: BuildDetail): string {\n    switch (item.status) {\n      case 'building': // primary blue\n        return 'Building...';\n\n      case 'pending': // orange\n        return 'Build pending';\n\n      case 'success': // green\n        return 'Build succeeded!';\n\n      case 'failed': // red\n        return 'Build failed';\n\n      case 'stop':\n        return 'Build cancelled';\n    }\n  }\n\n  getStatusColour(item: BuildDetail): string {\n    switch (item.status.toLowerCase()) {\n      case 'building': // primary blue\n        return 'primary';\n\n      case 'pending': // orange\n        return 'warning';\n\n      case 'success': // green\n        return 'success';\n\n      case 'failed': // red\n        return 'danger';\n\n      case 'stop': // grey\n        return 'muted';\n    }\n  }\n\n  getStatusIcon(item: BuildDetail): string {\n    switch (item.status.toLowerCase()) {\n      case 'building': // primary blue\n        return 'cached';\n\n      case 'pending': // orange\n        return 'history';\n\n      case 'success': // green\n        return 'check_circle_outline';\n\n      case 'failed': // red\n        return 'cancel';\n    }\n  }\n\n  isStatusPendingBuilding(item: BuildDetail): boolean {\n    switch (item.status.toLowerCase()) {\n      case 'pending':\n      case 'building':\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  getBuildDuration(item: BuildDetail): string {\n    let minutes = item.build_minutes;\n\n    var hrStr = '00';\n    var minStr = '00';\n    if (minutes == null || minutes == 0) {\n    } else {\n      let hr = Math.floor(minutes / 60);\n      let min = minutes - hr * 60;\n\n      hrStr = hr.toString();\n      minStr = min.toString();\n\n      if (hrStr.length < 2) hrStr = `0${hrStr}`;\n      if (minStr.length < 2) minStr = `0${minStr}`;\n    }\n\n    return `${hrStr} hr : ${minStr} min`;\n  }\n\n  //=== onclick funcs\n  goToBuildDetails(event, buildId: String) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.router.navigate([`/build-detail/${buildId}`]);\n  }\n\n  //=== paginator funcs\n  onPageEvent(event: PageEvent) {\n    this.dataService.setIsLoading(true);\n\n    // update vars for paginator\n    this.offset = event.pageIndex * 15;\n\n    // get history list\n    this.getBuildHistory();\n  }\n\n  //=== http funcs\n  async getBuildHistory() {\n    var getBuildHistoryURL = GlobalConstants.HTTP_GET_BUILD_HISTORY_URL(\n      this.currentProject.project_id,\n      this.offset\n    );\n\n    let resp = await this.httpService.httpGetWithHeader(\n      getBuildHistoryURL,\n      true\n    );\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      // update total count on get list\n      this.totalCount = resp.data['total_count'];\n      this.buildHistoryList = resp.data['build_list'];\n    } else {\n    }\n  }\n\n  createNewBuildOnClick() {\n    this.dialog.open(BuildComponent, {\n      data: {\n        buildType: GlobalConstants.BUILD_TYPE_NEW_BUILD,\n      },\n    });\n  }\n\n  async rebuildOnClick(buildId: string) {\n    this.dataService.setIsLoading(true);\n\n    // build form body json\n    let formBody = {\n      project_id: this.currentProject.project_id,\n      build_id: buildId,\n    };\n\n    var resp;\n    if (this.currentProject.platform == 'ios') {\n      resp = await this.httpService.httpPostWithHeader(\n        GlobalConstants.HTTP_REBUILD_URL,\n        formBody\n      );\n    } else {\n      // android\n    }\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      // go to build detail page if resp success\n      window.location.href = `/build-detail/${resp.data.build_id}`;\n    }\n  }\n\n  async cancelBuildOnClick(buildId: string, buildNumber: string) {\n    this.dataService.setIsLoading(true);\n\n    // build form body json\n    let formBody = {\n      platform: this.currentProject.platform,\n      build_id: buildId,\n    };\n\n    var resp;\n    if (this.currentProject.platform == 'ios') {\n      resp = await this.httpService.httpPostWithHeader(\n        GlobalConstants.HTTP_STOP_BUILD_URL,\n        formBody\n      );\n    } else {\n      // android\n    }\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      this._snackbar.open(StringsEng.CANCEL_BUILD_SUCCESS(buildNumber), null, {\n        duration: GlobalConstants.SNACKBAR_DURATION_LONG,\n      });\n\n      // refresh history list\n      this.getBuildHistory();\n    }\n  }\n\n  //=== interval funcs\n  // private startBuildHistoryPolling() {\n  //   // create timer only once\n  //   if (this.buildDetailsTimer != undefined) return;\n\n  //   // get details first time\n  //   this.getBuildDetails();\n\n  //   console.log('startBuildDetailsInterval');\n\n  //   this.buildDetailsTimer = interval(this.pollingIntervalMillis).subscribe(\n  //     (val) => {\n  //       console.log('startBuildDetailsInterval polling');\n\n  //       // don't continue polling if status changes to success/failure\n  //       if (this.shouldPollBasedOnStatus) this.getBuildDetails();\n  //       else this.stopBuildDetailsPolling();\n  //     }\n  //   );\n  // }\n\n  ngOnDestroy(): void {\n    this.currentProjSub.unsubscribe();\n  }\n}\n","<div class=\"row p-3\" *ngIf=\"currentProject != null\">\n    <div class=\"col pb-3\">\n        <div class=\"d-flex\">\n            <h1>Build History</h1>\n            <button class=\"btn btn-primary ml-auto\" type=\"button\" (click)=\"createNewBuildOnClick()\"\n                aria-label=\"Create project\">\n                Create New Build\n            </button>\n        </div>\n        <p>Check your build history so far, click for more info</p>\n\n        <div *ngFor=\"let buildHistory of buildHistoryList\"\n            class=\"callout callout-{{getStatusColour(buildHistory)}} cursor-pointer\">\n            <a class=\"flex-column\" [routerLink]=\"['/build-detail', buildHistory.build_id]\">\n                <div class=\"d-flex align-items-center\">\n                    <h5>#{{buildHistory.build_no}}</h5>\n\n                    <mat-icon class=\"ml-auto\">timer</mat-icon>\n                    <h3 class=\"ml-1\">{{getBuildDuration(buildHistory)}}</h3>\n\n                    <button [matMenuTriggerFor]=\"menuBuildMoreBtn\"\n                        (click)=\"$event.stopPropagation(); $event.preventDefault();\" class=\"ml-2\" mat-icon-button\n                        aria-label=\"Example icon button with a vertical three dot icon\">\n                        <mat-icon>more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menuBuildMoreBtn=\"matMenu\">\n                        <a *ngIf=\"!isStatusPendingBuilding(buildHistory)\" class=\"dropdown-item cursor-pointer\"\n                            (click)=\"rebuildOnClick(buildHistory.build_id)\">Rebuild</a>\n                        <a *ngIf=\"isStatusPendingBuilding(buildHistory)\" class=\"dropdown-item cursor-pointer\"\n                            (click)=\"cancelBuildOnClick(buildHistory.build_id, buildHistory.build_no)\">Cancel Build</a>\n                    </mat-menu>\n                </div>\n\n                <h3 class=\"mt-2\">{{buildHistory.scheme}} ({{buildHistory.environment}})</h3>\n\n                <h2>{{currentProject.name}}</h2>\n\n                <div class=\"d-flex align-items-center\">\n                    <h3>{{buildHistory.branch}}</h3>\n\n                    <mat-icon class=\"callout-status-icon ml-auto\">{{getStatusIcon(buildHistory)}}</mat-icon>\n                    <h4 class=\"ml-1\">{{getStatusText(buildHistory)}}</h4>\n                </div>\n            </a>\n        </div>\n\n        <mat-paginator class=\"mb-4\" [length]=\"totalCount? totalCount: 0\" [pageSize]=\"15\" [pageSizeOptions]=\"[15]\"\n            (page)=\"onPageEvent($event)\">\n        </mat-paginator>\n    </div>\n</div>","import { Component, OnInit, OnDestroy, Inject, Input } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { DataService } from 'src/app/services/data-service';\nimport { HttpResp, HttpService } from 'src/app/services/http-service';\nimport { GlobalConstants } from 'src/app/utils/global-constants';\nimport { StringsEng } from 'src/app/utils/strings-eng';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Subscription } from 'rxjs';\nimport { Project } from 'src/app/models/project';\nimport { Router } from '@angular/router';\n\nimport {\n  IosBuildTemplateOptions,\n  IosBuildTemplate,\n} from 'src/app/models/ios-build-template';\nimport { HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-build-template',\n  templateUrl: './build-template.component.html',\n  styleUrls: ['./build-template.component.css'],\n})\nexport class BuildTemplateComponent implements OnInit, OnDestroy {\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataService: DataService,\n    private httpService: HttpService,\n    private _snackbar: MatSnackBar,\n    private router: Router\n  ) {}\n\n  currentProjectId: string;\n  currentProjectPlatform: string;\n\n  // observables (destroy onDestroy)\n  private currentProjSub: Subscription;\n\n  // dialog input (for build type)\n  @Input()\n  private dialogData;\n  getSubmitBtnText(): string {\n    if (this.dialogData == null) return 'Submit';\n    else if (this.dialogData.buildType == GlobalConstants.BUILD_TYPE_NEW_BUILD)\n      return 'Create Build';\n    else return 'Rebuild';\n  }\n\n  // models for dropdown lists\n  iosBuildTemplateOptions: IosBuildTemplateOptions;\n\n  // dynamic dropdown for env (based on scheme)\n  environments: string[] = [];\n\n  // built template form\n  buildTemplateFormIos = this.getInitialFormBuilder();\n  private getInitialFormBuilder() {\n    return this.formBuilder.group({\n      project_id: '',\n      branch: '',\n      environment: '',\n      scheme: '',\n      testflight_option: false,\n      test_option: false,\n      push_to_branch_option: false,\n      s3_carthage_folder: 'Production', // hardcoded for mvp\n      firebase_distribution_group: '',\n      release_note: '',\n      adhoc_option: false,\n      enterprise_option: false,\n\n      build_number: null, // used to store build number temp, only for update build number func\n    });\n  }\n\n  // cartfile form\n  cartFileFormIos = this.getCartfileFormBuilder();\n  private getCartfileFormBuilder() {\n    return this.formBuilder.group({\n      project_id: '',\n      folder_name: 'Production', // hardcoded for mvp\n      cartfile: [''],\n    });\n  }\n  cartFileStatus: string;\n  cartFileName: string;\n\n  // check if already got build number on cloud\n  hasBuildNumberOnCloud = false;\n\n  ngOnInit(): void {\n    this.currentProjSub = this.dataService.currentProjectObs.subscribe(\n      (project: Project) => {\n        if (project != null) {\n          this.currentProjectId = project.project_id;\n          this.currentProjectPlatform = project.platform;\n\n          // get template first, then get list of options\n          this.getBuildTemplateOptions();\n        }\n      }\n    );\n  }\n\n  //=== for cartfile upload\n  // when file selected\n  async cartfileOnChange(event) {\n    if (event.target.files.length > 0) {\n      // set file name first\n      this.cartFileName = event.target.files[0].name;\n\n      // add file to form\n      const file = event.target.files[0];\n      this.cartFileFormIos.patchValue({\n        cartfile: file,\n      });\n\n      this.uploadCartFileHttp();\n    }\n  }\n\n  // upload file via http\n  async uploadCartFileHttp() {\n    this.dataService.setIsLoading(true);\n\n    // add projectId to form\n    this.cartFileFormIos.patchValue({\n      project_id: this.currentProjectId,\n    });\n\n    // transfer vars from form to formData\n    var formData = new FormData();\n    Object.keys(this.cartFileFormIos.controls).forEach((key) => {\n      formData.append(key, this.cartFileFormIos.value[key]);\n    });\n\n    var resp = await this.httpService.httpPostFormDataWithHeader(\n      GlobalConstants.HTTP_SET_IOS_CARTFILE_URL,\n      formData\n    );\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      this._snackbar.open(StringsEng.SET_CARTFILE_SUCCESS, null, {\n        duration: GlobalConstants.SNACKBAR_DURATION_LONG,\n      });\n\n      // get cartfile status\n      this.getCartfileStatus();\n    } else {\n      // show retry upload ux\n    }\n  }\n\n  async getCartfileStatus() {\n    var getStaticURL = GlobalConstants.HTTP_GET_IOS_CARTFILE_URL(\n      this.currentProjectId,\n      this.cartFileFormIos.value.folder_name\n    );\n\n    let resp = await this.httpService.httpGetWithHeader(getStaticURL, true);\n\n    if (resp.success) {\n      this.cartFileName = 'Cartfile';\n      this.cartFileStatus = resp.data.status;\n    } else {\n      this.cartFileStatus = null;\n    }\n  }\n\n  //=== for build template\n  // get template options to initiate form\n  async getBuildTemplateOptions() {\n    // choose url based on project platform\n    var getStaticURL: string;\n    if (this.currentProjectPlatform == 'ios')\n      getStaticURL = GlobalConstants.HTTP_GET_IOS_BUILD_TEMPLATE_OPTIONS_URL(\n        this.currentProjectId\n      );\n    else return; // no android yet\n\n    let resp = await this.httpService.httpGetWithHeader(getStaticURL, true);\n\n    if (resp.success) {\n      // insert data to model for dropdowns\n      if (this.currentProjectPlatform == 'ios') {\n        this.iosBuildTemplateOptions = resp.data;\n\n        // update build number to buildTemplate form for liveData\n        this.buildTemplateFormIos.patchValue({\n          build_number: resp.data.build_number,\n        });\n\n        // update build number bool if already got from server\n        if (this.iosBuildTemplateOptions.build_number != null)\n          this.hasBuildNumberOnCloud = true;\n\n        this.getBuildTemplate();\n      } else return;\n    } else {\n      // clear form if error (400)\n      if (resp.error.error.message == 'Not found') {\n        // clear form AND dropdown lists\n        this.buildTemplateFormIos = this.getInitialFormBuilder();\n        this.cartFileFormIos = this.getCartfileFormBuilder();\n\n        this.iosBuildTemplateOptions = null;\n        this.environments = [];\n      }\n    }\n  }\n\n  // update env dropdown on scheme change\n  onSchemeChanged() {\n    this.updateEnvDropdown();\n  }\n\n  updateEnvDropdown() {\n    let envs = this.iosBuildTemplateOptions.build_options.find(\n      (option) => option.scheme === this.buildTemplateFormIos.value.scheme\n    );\n\n    if (envs != null) this.environments = envs.environment;\n\n    // update form to first in env array\n    this.buildTemplateFormIos.patchValue({\n      environment: this.environments[0],\n    });\n  }\n\n  // get build template\n  async getBuildTemplate() {\n    // choose url based on project platform\n    var getStaticURL: string;\n    if (this.currentProjectPlatform == 'ios')\n      getStaticURL = GlobalConstants.HTTP_GET_IOS_BUILD_TEMPLATE_URL(\n        this.currentProjectId\n      );\n    else return; // no android yet\n\n    let resp = await this.httpService.httpGetWithHeader(getStaticURL, true);\n\n    if (resp.success) {\n      // insert data to form\n      if (this.currentProjectPlatform == 'ios') {\n        let iosBuildTemplate = resp.data as IosBuildTemplate;\n\n        this.buildTemplateFormIos = this.formBuilder.group({\n          project_id: this.currentProjectId,\n          branch: iosBuildTemplate.branch,\n          environment: iosBuildTemplate.environment,\n          scheme: iosBuildTemplate.scheme,\n          testflight_option: iosBuildTemplate.testflight_option,\n          test_option: iosBuildTemplate.test_option,\n          push_to_branch_option: iosBuildTemplate.push_to_branch_option,\n          s3_carthage_folder: iosBuildTemplate.s3_carthage_folder,\n          firebase_distribution_group:\n            iosBuildTemplate.firebase_distribution_group,\n          release_note: iosBuildTemplate.release_note,\n          adhoc_option: this.iosBuildTemplateOptions\n            ? this.iosBuildTemplateOptions.firebase_adhoc_option == '1'\n            : false,\n          enterprise_option: iosBuildTemplate.enterprise_option,\n          build_number: this.iosBuildTemplateOptions.build_number,\n        });\n\n        // setup env dropdown based on scheme\n        this.updateEnvDropdown();\n\n        // get cartfile status if cart option is true\n        if (this.iosBuildTemplateOptions.carthage_option == '1')\n          this.getCartfileStatus();\n      } else return; // android\n    } else {\n    }\n  }\n\n  //=== for build number\n  async updateBuildNumber(): Promise<HttpResp> {\n    var resp, formBody;\n    if (this.currentProjectPlatform == 'ios') {\n      formBody = {\n        project_id: this.currentProjectId,\n        build_number: this.buildTemplateFormIos.value.build_number,\n      };\n\n      console.log(\n        'buildNumber = ',\n        this.buildTemplateFormIos.value.build_number\n      );\n\n      resp = await this.httpService.httpPostWithHeader(\n        GlobalConstants.HTTP_SET_BUILD_NUMBER_URL,\n        formBody\n      );\n    } else {\n    }\n\n    return resp;\n  }\n\n  //=== for form submission (build template, create new build, rebuild)\n  // form on submit - differentiate by dialogData\n  formOnSubmit(formBody) {\n    if (this.dialogData == null) {\n      // build template\n      this.submitBuildTemplate(formBody);\n    } else {\n      switch (this.dialogData.buildType) {\n        case GlobalConstants.BUILD_TYPE_NEW_BUILD:\n          this.submitNewBuild(formBody);\n          break;\n\n        case GlobalConstants.BUILD_TYPE_REBUILD:\n          break;\n      }\n    }\n  }\n\n  // for build template form\n  async submitBuildTemplate(formBody) {\n    // alert user if cartfile is null\n    if (\n      this.iosBuildTemplateOptions.carthage_option == '1' &&\n      this.cartFileName == null\n    ) {\n      alert(StringsEng.CARTFILE_NULL);\n      return;\n    }\n\n    this.dataService.setIsLoading(true);\n\n    // add proj id to form\n    formBody.project_id = this.currentProjectId;\n\n    var resp;\n    if (this.currentProjectPlatform == 'ios') {\n      resp = await this.httpService.httpPostWithHeader(\n        GlobalConstants.HTTP_SET_IOS_BUILD_TEMPLATE_URL,\n        formBody\n      );\n    } else {\n    }\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      this._snackbar.open(StringsEng.SET_BUILD_TEMPLATE_SUCCESS, null, {\n        duration: GlobalConstants.SNACKBAR_DURATION_MID,\n      });\n    }\n  }\n\n  // for create new build\n  async submitNewBuild(formBody) {\n    this.dataService.setIsLoading(true);\n\n    // add new build data to form\n    formBody.project_id = this.currentProjectId;\n\n    var resp;\n    if (this.currentProjectPlatform == 'ios') {\n      // if hvn't updated build number to server, do so\n      var shouldProceed = false;\n\n      if (!this.hasBuildNumberOnCloud) {\n        shouldProceed = (await this.updateBuildNumber()).success;\n      } else {\n        shouldProceed = true;\n      }\n\n      // don't proceed if update build number failed\n      if (!shouldProceed) return;\n\n      // add in iosOnly details\n      formBody.platform = 'ios';\n\n      // remove build number from formBody\n      delete formBody.build_number;\n\n      resp = await this.httpService.httpPostWithHeader(\n        GlobalConstants.HTTP_CREATE_BUILD_URL,\n        formBody\n      );\n    } else {\n      // android\n    }\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      // go to build detail page if resp success\n      let buildId = resp.data.build_id;\n      window.location.href = `/build-detail/${buildId}`;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.currentProjSub.unsubscribe();\n  }\n}\n","<div class=\"row p-3\" *ngIf=\"currentProjectId != null\">\n    <div class=\"col pb-3\">\n        <div *ngIf=\"dialogData == null\">\n            <h1>Build Template</h1>\n            <p>Configure your build template here that will be used as the default template for any new builds, so that\n                you\n                won't have to re-configure everything everytime you create a new build. These options are configurable\n                when\n                creating a build.</p>\n        </div>\n\n        <div *ngIf=\"dialogData != null\">\n            <h1>Create New Build</h1>\n            <p>Submit a new build with configurations based on your build template. You can change details here for this\n                build only without affecting the build template.</p>\n        </div>\n\n        <mat-card-content class=\"px-2 py-4\">\n            <form [formGroup]=\"buildTemplateFormIos\" (ngSubmit)=\"formOnSubmit(buildTemplateFormIos.value)\"\n                ngNativeValidate>\n\n                <!-- build number - only for actual builds (not build template) -->\n                <div *ngIf=\"dialogData != null\" class=\"form-group\">\n                    <label for=\"buildNumber\">New Build Number</label>\n\n                    <div class=\"input-group\">\n                        <input type=\"number\" class=\"form-control\" id=\"buildNumber\" aria-describedby=\"buildNumberNote\"\n                            formControlName=\"build_number\" required>\n                        <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-success\" type=\"button\" id=\"button-addon2\"\n                                (click)=\"updateBuildNumber()\">Update</button>\n                        </div>\n                    </div>\n                    <small id=\"buildNumberNote\" class=\"form-text text-muted\">This will be the build number for this\n                        new build. This is required for the first time of building the project only, but you can\n                        also choose to update it manually for this new build.</small>\n                </div>\n\n                <div class=\"form-group\" *ngIf=\"iosBuildTemplateOptions != null\">\n                    <label for=\"schemeDropdown\">Scheme</label>\n                    <select class=\"custom-select cursor-pointer\" id=\"schemeDropdown\" (change)=\"onSchemeChanged()\"\n                        aria-describedby=\"schemeDropdownNote\" formControlName=\"scheme\" aria-label=\"Schemes dropdown\"\n                        required>\n                        <option *ngFor=\"let option of iosBuildTemplateOptions.build_options\" value=\"{{option.scheme}}\">\n                            {{option.scheme}}\n                        </option>\n                    </select>\n                    <small id=\"schemeDropdownNote\" class=\"form-text text-muted\">The default scheme in your project that\n                        you want to build.\n                    </small>\n                </div>\n\n                <div class=\"form-group\" *ngIf=\"iosBuildTemplateOptions != null && environments.length > 0\">\n                    <label for=\"envDropdown\">Environment</label>\n                    <select class=\"custom-select cursor-pointer\" id=\"envDropdown\" aria-describedby=\"envDropdownNote\"\n                        formControlName=\"environment\" aria-label=\"Environments dropdown\" required>\n                        <option *ngFor=\"let environment of environments\" value=\"{{environment}}\">\n                            {{environment}}\n                        </option>\n                    </select>\n                    <small id=\"envDropdownNote\" class=\"form-text text-muted\">The default environment for the selected\n                        scheme which you\n                        want to build. Switching schemes will result in different environments to choose from, according\n                        to your Project Static Configs.\n                    </small>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"gitBranch\">Git Branch</label>\n                    <input type=\"text\" class=\"form-control\" id=\"gitBranch\" formControlName=\"branch\"\n                        aria-describedby=\"gitBranchNote\" placeholder=\"e.g. master\" required>\n                    <small id=\"gitBranchNote\" class=\"form-text text-muted\">The name of the branch in your Git repository\n                        that you want to build.</small>\n                </div>\n\n                <!-- carthage options -->\n                <mat-card class=\"mb-3\"\n                    *ngIf=\"iosBuildTemplateOptions? iosBuildTemplateOptions.carthage_option == '1' : false\">\n                    <div class=\"form-group\">\n                        <div class=\"d-flex align-items-center\">\n                            <label for=\"cartFile\">Carthage File</label>\n\n                            <!-- cartfile status -->\n                            <!-- building -->\n                            <label class=\"ml-auto d-flex align-items-center text-secondary\"\n                                *ngIf=\"cartFileStatus == 'building'\">\n                                <mat-spinner class=\"mr-1\" diameter=\"18\"></mat-spinner>\n                                Compiling...\n                            </label>\n\n                            <!-- success -->\n                            <label class=\"ml-auto d-flex align-items-center text-success\"\n                                *ngIf=\"cartFileStatus == 'success'\">\n                                <mat-icon class=\"mr-1\">check_circle_outline</mat-icon>\n                                Done!\n                            </label>\n\n                            <!-- failure -->\n                            <label class=\"ml-auto d-flex align-items-center text-danger\"\n                                *ngIf=\"cartFileStatus == 'failure'\">\n                                <mat-icon class=\"mr-1\">cancel</mat-icon>\n                                Failed!\n                            </label>\n                        </div>\n\n                        <div class=\"input-group\">\n                            <div class=\"custom-file\">\n                                <input #inputFile type=\"file\" class=\"custom-file-input cursor-pointer\" id=\"cartFile\"\n                                    aria-describedby=\"cartFileNote\" (change)=\"cartfileOnChange($event)\">\n                                <label class=\"custom-file-label\"\n                                    for=\"cartFile\">{{cartFileName? cartFileName: 'Choose file'}}</label>\n                            </div>\n                        </div>\n                        <small id=\"cartFileNote\" class=\"form-text text-muted\">Specify the cartfile to be used for\n                            compiling this build. Compilation will begin as soon as cartfile is chosen, and you can\n                            navigate away from this website as it compiles on our server.</small>\n                    </div>\n\n                </mat-card>\n\n                <!-- firebase adhoc options -->\n                <mat-card class=\"mb-3\"\n                    *ngIf=\"iosBuildTemplateOptions? iosBuildTemplateOptions.firebase_adhoc_option == '1' : false\">\n                    <div class=\"form-group\">\n                        <label for=\"firebaseOptions\">Firebase Adhoc Deployment</label>\n                        <mat-slide-toggle class=\"ml-2\" id=\"firebaseOptions\" aria-describedby=\"firebaseOptionsNote\"\n                            [checked]=\"buildTemplateFormIos.value.adhoc_option\" formControlName=\"adhoc_option\">\n                        </mat-slide-toggle>\n                        <small id=\"firebaseOptionsNote\" class=\"form-text text-muted\">Enabled if you have this option\n                            enabled in Project Static Configs. The static configs are not affected even if your disable\n                            this here.</small>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"buildTemplateFormIos.value.adhoc_option == true\">\n                        <label for=\"firebaseDistGrp\">Firebase Distribution Group</label>\n                        <input type=\"text\" class=\"form-control\" id=\"firebaseDistGrp\" placeholder=\"e.g. PRODUCT_TEAM\"\n                            formControlName=\"firebase_distribution_group\" aria-describedby=\"firebaseDistGrpNote\"\n                            required>\n                        <small id=\"firebaseDistGrpNote\" class=\"form-text text-muted\">Specify the default firebase\n                            group to deploy your build to.</small>\n                    </div>\n                </mat-card>\n\n                <!-- build options -->\n                <mat-card class=\"mb-3\">\n                    <div class=\"form-group\">\n                        <label for=\"testFlightOptions\">TestFlight Enabled</label>\n                        <mat-slide-toggle class=\"ml-2\" id=\"testFlightOptions\" aria-describedby=\"testFlightOptionsNote\"\n                            [checked]=\"buildTemplateFormIos.value.testflight_option\"\n                            formControlName=\"testflight_option\">\n                        </mat-slide-toggle>\n                        <small id=\"testFlightOptionsNote\" class=\"form-text text-muted\">Check this if you want to deploy\n                            your Beta app via Apple's TestFlight.</small>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"testOptions\">Test Enabled</label>\n                        <mat-slide-toggle class=\"ml-2\" id=\"testOptions\" aria-describedby=\"testOptionsNote\"\n                            [checked]=\"buildTemplateFormIos.value.test_option\" formControlName=\"test_option\">\n                        </mat-slide-toggle>\n                        <small id=\"testOptionsNote\" class=\"form-text text-muted\">Enable this if you have implemented\n                            unit tests in your codes and would like to run them when building.</small>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"pushToBranchOptions\">Push-To-Branch Enabled</label>\n                        <mat-slide-toggle class=\"ml-2\" id=\"pushToBranchOptions\"\n                            aria-describedby=\"pushToBranchOptionsNote\"\n                            [checked]=\"buildTemplateFormIos.value.push_to_branch_option\"\n                            formControlName=\"push_to_branch_option\">\n                        </mat-slide-toggle>\n                        <small id=\"pushToBranchOptionsNote\" class=\"form-text text-muted\">Enable this if you want this\n                            build to be committed and pushed to the Git branch you selected after build completes.\n                            Typical updates include\n                            auto-increment of version codes.</small>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"enterpriseOptions\">Enterprise Account</label>\n                        <mat-slide-toggle class=\"ml-2\" id=\"enterpriseOptions\" aria-describedby=\"enterpriseOptionsNote\"\n                            [checked]=\"buildTemplateFormIos.value.enterprise_option\"\n                            formControlName=\"enterprise_option\">\n                        </mat-slide-toggle>\n                        <small id=\"enterpriseOptionsNote\" class=\"form-text text-muted\">Enable this if your Apple\n                            Developer account is an Enterprise Account.</small>\n                    </div>\n                </mat-card>\n\n                <div class=\"form-group\">\n                    <label for=\"releaseNotes\">Release Notes (Optional)</label>\n                    <textarea type=\"text\" class=\"form-control\" id=\"releaseNotes\" formControlName=\"release_note\"\n                        aria-describedby=\"releaseNotesNote\" rows=\"4\"></textarea>\n                    <small id=\"releaseNotesNote\" class=\"form-text text-muted\">Optional: Type your default release notes\n                        to be used for future builds.</small>\n                </div>\n\n                <div class=\"d-flex mb-4\">\n                    <button type=\"submit\" class=\"btn btn-primary\">{{getSubmitBtnText()}}</button>\n                </div>\n            </form>\n        </mat-card-content>\n    </div>\n</div>","import { Component, OnInit, OnDestroy, Injector } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { Project } from 'src/app/models/project';\nimport { DataService } from 'src/app/services/data-service';\n\n@Component({\n  selector: 'app-build',\n  templateUrl: './build.component.html',\n  styleUrls: ['./build.component.css'],\n})\nexport class BuildComponent implements OnInit {\n  constructor(private injector: Injector, private dataService: DataService) {\n    this.dialogData = this.injector.get(MAT_DIALOG_DATA, null);\n  }\n\n  // dialog data\n  dialogData;\n\n  // observables (destroy onDestroy)\n  private currentProjSub: Subscription;\n\n  currentProjectId: string;\n  currentProjectPlatform: string;\n\n  ngOnInit(): void {\n    this.currentProjSub = this.dataService.currentProjectObs.subscribe(\n      (project: Project) => {\n        if (project != null) {\n          this.currentProjectId = project.project_id;\n          this.currentProjectPlatform = project.platform;\n        }\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.currentProjSub.unsubscribe();\n  }\n}\n","<mat-card-content *ngIf=\"dialogData == null\">\n    <app-build-template></app-build-template>\n</mat-card-content>\n\n<mat-dialog-content *ngIf=\"dialogData != null\">\n    <app-build-template [dialogData]=\"dialogData\"></app-build-template>\n</mat-dialog-content>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { DataService } from 'src/app/services/data-service';\nimport { HttpService } from 'src/app/services/http-service';\nimport { GlobalConstants } from 'src/app/utils/global-constants';\nimport { StringsEng } from 'src/app/utils/strings-eng';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GitConfigs } from 'src/app/models/git-configs';\nimport { Project } from 'src/app/models/project';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-git-configs',\n  templateUrl: './git-configs.component.html',\n  styleUrls: ['./git-configs.component.css'],\n})\nexport class GitConfigsComponent implements OnInit, OnDestroy {\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataService: DataService,\n    private httpService: HttpService,\n    private _snackbar: MatSnackBar,\n    private clipboard: Clipboard\n  ) {}\n  currentProjectId: string\n\n  // observables (destroy onDestroy)\n  private currentProjSub: Subscription\n\n  // for form\n  gitSSHKey: string;\n  gitConfigForm = this.formBuilder.group({\n    git_url: '',\n    git_login_type: 'ssh',\n    git_password: '',\n  });\n\n  ngOnInit(): void {    \n    // subscribe to current proj\n    this.currentProjSub = this.dataService.currentProjectObs.subscribe((project: Project) => {\n      if (project != null) {\n        this.currentProjectId = project.project_id        \n\n        // get git config\n        this.getGitConfigs();\n\n        // get ssh key\n        this.getSSHKey()\n      }\n    });\n  };\n\n  //=== ui\n  getGitUrlPlaceHolder(): string {\n    if (this.gitConfigForm.value.git_login_type == 'ssh')\n    return \"git@bitbucket.org:userA/projectABC.git\"\n    else\n    return \"https://userLoginA@bitbucket.org/userA/projectABC.git\"\n  }\n\n  //=== http\n  async getGitConfigs() {\n    let resp = await this.httpService.httpGetWithHeader(\n      GlobalConstants.HTTP_GET_GIT_CONFIG_URL(this.currentProjectId),\n      true\n    );\n\n    if (resp.success) {\n      // insert data to form\n      let gitConfigs = resp.data as GitConfigs;\n\n      this.gitConfigForm = this.formBuilder.group({\n        project_id: this.currentProjectId,\n        git_url: gitConfigs.git_url,\n        git_login_type: gitConfigs.git_login_type,\n        git_password: gitConfigs.git_password,\n      });\n    } else {\n      // error means no configs yet - clear form\n      this.gitConfigForm = this.formBuilder.group({\n        project_id: this.currentProjectId,\n        git_url: '',\n        git_login_type: 'ssh',\n        git_password: '',\n      });\n    }\n  }\n\n  async getSSHKey() {\n    let resp = await this.httpService.httpGetWithHeader(\n      GlobalConstants.HTTP_GET_SSH_KEY_URL(this.currentProjectId),\n      true\n    );\n\n    if (resp.success) {\n      this.gitSSHKey = resp.data.public_key\n    } else {\n      this.gitSSHKey = null\n    }\n  }\n\n  generateBtnDisabled = false;\n  generateBtnOnClick() {\n    // show confirmation only if already got ssh key\n    if (this.gitSSHKey != null) {\n      if (confirm(StringsEng.GENERATE_SSH_CONFIRM)) this.generateSSHKey();\n    } else this.generateSSHKey();\n  }\n\n  async generateSSHKey() {\n    this.generateBtnDisabled = true;\n\n    let resp = await this.httpService.httpPostWithHeader(\n      GlobalConstants.HTTP_GENERATE_SSH_KEY_URL,\n      { project_id: this.currentProjectId }\n    );\n\n    this.generateBtnDisabled = false;\n\n    if (resp.success) {\n      this.gitSSHKey = resp.data.public_key;\n    }\n  }\n\n  // copy ssh key if got\n  textAreaOnClick() {\n    if (this.gitSSHKey != null) {\n      this.clipboard.copy(this.gitSSHKey);\n\n      this._snackbar.open(StringsEng.SSH_KEY_COPIED, null, {\n        duration: GlobalConstants.SNACKBAR_DURATION_MID,\n      });\n    }\n  }\n\n  async submitGitConfigForm(formBody) {\n    // check if ssh key already generated for ssh\n    if (formBody.git_login_type == 'ssh' && this.gitSSHKey == null) {\n      alert(StringsEng.SSH_KEY_EMPTY);\n      return;\n    }\n\n    this.dataService.setIsLoading(true);\n\n    // update project Id to formBody\n    formBody.project_id = this.currentProjectId\n\n    // remove password from body if got ssh\n    if (formBody.git_login_type == 'ssh') formBody.git_password = ''\n\n    let resp = await this.httpService.httpPostWithHeader(\n      GlobalConstants.HTTP_SET_GIT_CONFIG_URL,\n      formBody\n    );\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      this._snackbar.open(StringsEng.SET_GIT_CONFIG_SUCCESS, null, {\n        duration: GlobalConstants.SNACKBAR_DURATION_MID,\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.currentProjSub.unsubscribe();\n  }\n}\n","<div class=\"row p-3\" *ngIf=\"currentProjectId != null\">\n    <div class=\"col pb-3\">\n        <h1>Git Configs</h1>\n        <p>This is where the git configurations for your project go. Login to your gitlab repository to get the required\n            information.</p>\n        <mat-card-content class=\"px-2 py-4\">\n            <form [formGroup]=\"gitConfigForm\" (ngSubmit)=\"submitGitConfigForm(gitConfigForm.value)\" ngNativeValidate>\n                <div class=\"form-group\">\n                    <label for=\"gitLoginTypeSelect\">Git Login Type</label>\n                    <select class=\"custom-select cursor-pointer\" id=\"gitLoginTypeSelect\" aria-describedby=\"gitRepoURL\"\n                        formControlName=\"git_login_type\" aria-label=\"Example select with button addon\" required>\n                        <option value=\"ssh\">SSH (recommended)</option>\n                        <option value=\"credential\">Credential (HTTPS)</option>\n                    </select>\n                    <small id=\"gitLoginType\" class=\"form-text text-muted\">The preferred login type to your git\n                        repository. SSH is recommended for security purposes.\n                    </small>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"gitUrlInput\">Git Repository Url</label>\n                    <input type=\"text\" class=\"form-control\" id=\"gitUrlInput\" formControlName=\"git_url\"\n                        aria-describedby=\"gitRepoURL\" placeholder=\"e.g. {{getGitUrlPlaceHolder()}}\" required>\n                    <small id=\"gitRepoURL\" class=\"form-text text-muted\">This is the link to your git repository,\n                        depending on which login type is chosen.</small>\n                </div>\n\n                <!-- generate public key btn (ssh) -->\n                <div class=\"form-group\" *ngIf=\"gitConfigForm.value.git_login_type == 'ssh'\">\n                    <label for=\"gitSSHKeyInput\">Git SSH Key</label>\n                    <div class=\"input-group\">\n                        <textarea type=\"text\" class=\"form-control\" id=\"gitSSHKeyInput\" aria-describedby=\"gitSSHKey\"\n                            rows=\"5\" (click)=\"textAreaOnClick()\" readonly>{{gitSSHKey}}</textarea>\n                        <div class=\"input-group-append\">\n                            <button (click)=\"generateBtnOnClick()\" type=\"button\" class=\"btn btn-info\"\n                                [disabled]=\"generateBtnDisabled\">Generate</button>\n                        </div>\n                    </div>\n\n                    <small id=\"gitSSHKey\" class=\"form-text text-muted\">Generate a new SSH key and copy/paste it to your\n                        Git Repository. You only need to generate this key once.</small>\n                </div>\n\n                <!-- password input (credential) -->\n                <div class=\"form-group\" *ngIf=\"gitConfigForm.value.git_login_type == 'credential'\">\n                    <label for=\"gitUrlInput\">Git Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"gitUrlInput\" formControlName=\"git_url\"\n                        aria-describedby=\"gitRepoURL\" formControlName=\"git_password\"\n                        [required]=\"gitConfigForm.value.git_login_type == 'credential'\">\n                    <small id=\"gitRepoURL\" class=\"form-text text-muted\">The password you use for logging into your Git\n                        repository, or App Password which gives access to your repository.</small>\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary mb-4\">Submit</button>\n            </form>\n        </mat-card-content>\n    </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { DataService } from 'src/app/services/data-service';\nimport { HttpService } from 'src/app/services/http-service';\nimport { GlobalConstants } from 'src/app/utils/global-constants';\nimport { StringsEng } from 'src/app/utils/strings-eng';\nimport { Subscription } from 'rxjs';\nimport { Project } from 'src/app/models/project';\nimport { IosStaticConfigs } from 'src/app/models/ios-static-configs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-static-configs',\n  templateUrl: './static-configs.component.html',\n  styleUrls: ['./static-configs.component.css'],\n})\nexport class StaticConfigsComponent implements OnInit, OnDestroy {\n  currentProjectId: string;\n  currentProjectPlatform: string;\n\n  // observables (destroy onDestroy)\n  private currentProjSub: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataService: DataService,\n    private httpService: HttpService,\n    private _snackbar: MatSnackBar\n  ) {}\n\n  // for main static configs form\n  staticConfigFormIos = this.getInitialFormBuilder();\n  private getInitialFormBuilder() {\n    return this.formBuilder.group({\n      project_id: '',\n\n      // text copied from xcode\n      xcodeproject: '',\n      team_cert: '',\n\n      // manual || automatic\n      signing_method: 'automatic',\n\n      // credential || key\n      upload_method: 'key',\n\n      // credential only\n      appstore_username: '',\n      appstore_password: '',\n      bundle_ids: '',\n\n      // key only (appstore connect api)\n      appstore_api_key: '',\n      appstore_api_issuer: '',\n      appstore_key: '',\n\n      // pod related\n      pod_option: false,\n      carthage_option: false,\n\n      // optional field for when compiling ipa\n      bitcode_option: true,\n\n      // optional field for firebase deployment\n      firebase_adhoc_option: false,\n      firebase_token: '',\n\n      // google || teams || slack || none\n      notification_channel: 'none',\n\n      // hide if none\n      notification_hook_url: '',\n    });\n  }\n\n  // app signing form\n  appSigningFormIos = this.getAppSigningIosFormBuilder();\n  private getAppSigningIosFormBuilder() {\n    return this.formBuilder.group({\n      project_id: '',\n      certificate_password: '', // optional\n      provisioning_cert: [''],\n      private_key: [''],\n    });\n  }\n\n  //=== for ui\n  // app upload method desc string based on user's selection\n  getUploadMethodDesc(uploadMethod: string) {\n    if (uploadMethod == 'key')\n    return StringsEng\n  }\n\n  // file names for uploading fields\n  provisioningCertFileName: string;\n  privateKeyFileName: string;\n\n  // for app signing method files check - check if required files uploaded\n  hasAutoAppSigningFiles: boolean = false;\n  checkAppSigningAndProceed(): boolean {\n    if (this.staticConfigFormIos.value.signing_method == 'automatic')\n      // auto - check if files uploaded\n      return this.hasAutoAppSigningFiles;\n    // manual signing - proceed\n    else return true;\n  }\n\n  // only enable upload btn if got changes\n  shouldEnableUploadBtn = false;\n  // getUploadBtnClass() {\n  //   if (this.shouldEnableUploadBtn) return ''\n  // }\n\n  ngOnInit(): void {\n    // subscribe to current proj\n    this.currentProjSub = this.dataService.currentProjectObs.subscribe(\n      (project: Project) => {\n        if (project != null) {\n          this.currentProjectId = project.project_id;\n          this.currentProjectPlatform = project.platform;\n\n          // reset everything before get new details\n          this.staticConfigFormIos = this.getInitialFormBuilder();\n          this.appSigningFormIos = this.getAppSigningIosFormBuilder();\n    \n          this.provisioningCertFileName = null;\n          this.privateKeyFileName = null;\n          this.hasAutoAppSigningFiles = false;\n          this.shouldEnableUploadBtn = false\n\n          this.getStaticConfigs();\n        }\n      }\n    );\n  }\n\n  async getStaticConfigs() {\n    // choose url based on project platform\n    var getStaticURL: string;\n    if (this.currentProjectPlatform == 'ios')\n      getStaticURL = GlobalConstants.HTTP_GET_IOS_STATIC_CONFIG_URL(\n        this.currentProjectId\n      );\n    else return; // no android yet\n\n    let resp = await this.httpService.httpGetWithHeader(getStaticURL, true);\n\n    if (resp.success) {\n      // insert data to form\n      if (this.currentProjectPlatform == 'ios') {\n        let iosStaticConfigs = resp.data as IosStaticConfigs;\n\n        // update main form first\n        this.staticConfigFormIos = this.formBuilder.group({\n          project_id: this.currentProjectId,\n          xcodeproject: iosStaticConfigs.xcodeproject,\n          signing_method: iosStaticConfigs.signing_method,\n          upload_method: iosStaticConfigs.upload_method,\n          team_cert: iosStaticConfigs.team_cert,\n          appstore_username: iosStaticConfigs.appstore_username,\n          appstore_password: iosStaticConfigs.appstore_password,\n          appstore_api_key: iosStaticConfigs.appstore_api_key,\n          appstore_api_issuer: iosStaticConfigs.appstore_api_issuer,\n          appstore_key: iosStaticConfigs.appstore_key,\n          bundle_ids: iosStaticConfigs.bundle_ids,\n          pod_option: iosStaticConfigs.pod_option,\n          carthage_option: iosStaticConfigs.carthage_option,\n          bitcode_option: iosStaticConfigs.bitcode_option,\n          firebase_adhoc_option: iosStaticConfigs.firebase_adhoc_option,\n          firebase_token: iosStaticConfigs.firebase_token,\n          notification_channel: iosStaticConfigs.notification_channel,\n          notification_hook_url: iosStaticConfigs.notification_hook_url,\n        });\n\n        // update app signing form if auto\n        if (iosStaticConfigs.signing_method == 'automatic') {\n          this.appSigningFormIos.patchValue({\n            certificate_password: iosStaticConfigs.certificate_password,\n          });\n          this.provisioningCertFileName =\n            iosStaticConfigs.provisioning_file_name;\n          this.privateKeyFileName = iosStaticConfigs.private_key_file_name;\n          this.hasAutoAppSigningFiles = true;\n\n        } else {\n          this.hasAutoAppSigningFiles = false;\n        }\n      } else return;\n    }\n  }\n\n  // app signing cert pword\n  shouldShowCertPword = false;\n  toggleShowCertPword() {\n    this.shouldShowCertPword = !this.shouldShowCertPword;\n  }\n\n  //=== app signing files upload\n  async provisioningCertOnChange(event) {\n    if (event.target.files.length > 0) {\n      this.shouldEnableUploadBtn = true;\n\n      // set file name first\n      this.provisioningCertFileName = event.target.files[0].name;\n\n      // add file to form\n      const file = event.target.files[0];\n      this.appSigningFormIos.patchValue({\n        provisioning_cert: file,\n      });\n    }\n  }\n\n  async privateKeyOnChange(event) {\n    if (event.target.files.length > 0) {\n      this.shouldEnableUploadBtn = true;\n\n      // set file name first\n      this.privateKeyFileName = event.target.files[0].name;\n\n      // add file to form\n      const file = event.target.files[0];\n      this.appSigningFormIos.patchValue({\n        private_key: file,\n      });\n    }\n  }\n\n  // update upload btn enabled on cert pword field changed\n  certPwordOnChange() {\n    this.shouldEnableUploadBtn = true;\n  }\n\n  async submitStaticConfigForm(formBody) {\n    // show dialog if no file uploaded for app signing (auto)\n    if (!this.checkAppSigningAndProceed()) {\n      alert(StringsEng.APP_SIGNING_FILES_NULL);\n      return;\n    }\n\n    this.dataService.setIsLoading(true);\n\n    // add project id\n    formBody.project_id = this.currentProjectId;\n\n    var resp;\n    if (this.currentProjectPlatform == 'ios') {\n      resp = await this.httpService.httpPostWithHeader(\n        GlobalConstants.HTTP_SET_IOS_STATIC_CONFIG_URL,\n        formBody\n      );\n    } else {\n    }\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      this._snackbar.open(StringsEng.SET_STATIC_CONFIG_SUCCESS, null, {\n        duration: GlobalConstants.SNACKBAR_DURATION_MID,\n      });\n    }\n  }\n\n  // upload form data for app signing method (auto)\n  async uploadAppSigningAutoFiles() {\n    this.dataService.setIsLoading(true);\n\n    // add projectId to form\n    this.appSigningFormIos.patchValue({\n      project_id: this.currentProjectId,\n    });\n\n    console.log(this.appSigningFormIos.value);\n\n    // transfer vars from form to formData\n    var formData = new FormData();\n    Object.keys(this.appSigningFormIos.controls).forEach((key) => {\n      // only append value if NON-null/empty strings\n      if (this.appSigningFormIos.value[key] != '')\n        formData.append(key, this.appSigningFormIos.value[key]);\n    });\n\n    var resp = await this.httpService.httpPostFormDataWithHeader(\n      GlobalConstants.HTTP_SET_IOS_APP_SIGNING_AUTO_URL,\n      formData\n    );\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      this._snackbar.open(StringsEng.SET_APP_SIGNING_FILES_SUCCESS, null, {\n        duration: GlobalConstants.SNACKBAR_DURATION_LONG,\n      });\n\n      // update upload boolean\n      this.hasAutoAppSigningFiles = true;\n    } else {\n      // show retry upload ux\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.currentProjSub.unsubscribe();\n  }\n}\n","<div class=\"row p-3\" *ngIf=\"currentProjectId != null\">\n    <div class=\"col pb-3\">\n        <h1>Project Static Configs</h1>\n        <p>This is where the you set 1-time static configurations for your project. Most of these information will be\n            releavant to your XCode configurations.</p>\n        <mat-card-content class=\"px-2 py-4\">\n            <form [formGroup]=\"staticConfigFormIos\" (ngSubmit)=\"submitStaticConfigForm(staticConfigFormIos.value)\"\n                *ngIf=\"currentProjectPlatform == 'ios'\" ngNativeValidate>\n                <div class=\"form-group\">\n                    <label for=\"xcodeProjName\">XCode Project Name</label>\n                    <input type=\"text\" class=\"form-control\" id=\"xcodeProjName\" formControlName=\"xcodeproject\"\n                        placeholder=\"e.g. abc_app_ios\" required>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"teamCert\">Signing Certificate Name</label>\n                    <input type=\"text\" class=\"form-control\" id=\"teamCert\" formControlName=\"team_cert\"\n                        aria-describedby=\"teamCertNote\" placeholder=\"e.g. Apple Distribution: ABC Company Sdn. Bhd.\"\n                        required>\n                    <small id=\"teamCertNote\" class=\"form-text text-muted\">The name of the Apple signing certificate for\n                        this project.</small>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"signingMethod\">App Signing Method</label>\n                    <select class=\"custom-select cursor-pointer\" id=\"signingMethod\" aria-describedby=\"signingMethodNote\"\n                        formControlName=\"signing_method\" aria-label=\"App signing Method\" required>\n                        <option value=\"automatic\" selected>Automatic (recommended)</option>\n                        <option value=\"manual\">Manual</option>\n                    </select>\n                    <small id=\"signingMethodNote\" class=\"form-text text-muted\">The preferred signing method for your\n                        app.\n                        Automatic signing is recommended for security reasons.\n                    </small>\n                </div>\n\n                <!-- upload method: automatic -->\n                <form [formGroup]=\"appSigningFormIos\" (ngSubmit)=\"uploadAppSigningAutoFiles(appSigningFormIos.value)\"\n                    *ngIf=\"currentProjectPlatform == 'ios'\" ngNativeValidate>\n                    <mat-card *ngIf=\"staticConfigFormIos.value.signing_method == 'automatic'\" class=\"mb-3\">\n                        <div class=\"form-group\">\n                            <label for=\"provisioningCertFile\">Apple Provisioning Profile Certificate</label>\n                            <div class=\"input-group\">\n                                <div class=\"custom-file\">\n                                    <input #inputFile type=\"file\" class=\"custom-file-input cursor-pointer\"\n                                        id=\"provisioningCertFile\" aria-describedby=\"provisioningCertFileNote\"\n                                        (change)=\"provisioningCertOnChange($event)\"\n                                        [required]=\"provisioningCertFileName == undefined\">\n                                    <label class=\"custom-file-label\"\n                                        for=\"provisioningCertFile\">{{provisioningCertFileName? provisioningCertFileName: 'Choose file'}}</label>\n                                </div>\n                            </div>\n                            <small id=\"provisioningCertFileNote\" class=\"form-text text-muted mb-3\">Upload your Apple\n                                Provisioning Profile Certificate for this project. <a\n                                    href=\"https://developer.apple.com/support/certificates/\" target=\"_blank\">Learn\n                                    more</a>\n                            </small>\n\n                            <label for=\"privateKeyFile\">Certificate Private Key File</label>\n                            <div class=\"input-group\">\n                                <div class=\"custom-file\">\n                                    <input #inputFile type=\"file\" class=\"custom-file-input cursor-pointer\"\n                                        id=\"privateKeyFile\" aria-describedby=\"privateKeyFileNote\"\n                                        (change)=\"privateKeyOnChange($event)\"\n                                        [required]=\"privateKeyFileName == undefined\">\n                                    <label class=\"custom-file-label\"\n                                        for=\"privateKeyFile\">{{privateKeyFileName? privateKeyFileName: 'Choose file'}}</label>\n                                </div>\n                            </div>\n                            <small id=\"privateKeyFileNote\" class=\"form-text text-muted mb-3\">Upload the private key file\n                                associated to the certificate chosen above. <a\n                                    href=\"https://developer.apple.com/support/certificates/\" target=\"_blank\">Learn\n                                    more</a>\n                            </small>\n\n                            <div class=\"form-group\">\n                                <label for=\"certPword\">Certificate Password</label>\n                                <input type=\"{{shouldShowCertPword? 'text':'password'}}\" class=\"form-control\"\n                                    formControlName=\"certificate_password\" id=\"certPword\"\n                                    (change)=\"certPwordOnChange()\">\n                                <small class=\"form-text text-muted\">Optional: Input the password used when generating\n                                    your p12 private key file, if applicable.</small>\n                            </div>\n\n                            <div class=\"form-group form-check\">\n                                <input type=\"checkbox\" class=\"form-check-input\" id=\"showCertPword\"\n                                    (change)=toggleShowCertPword()>\n                                <label class=\"form-check-label\" for=\"showCertPword\">Show password</label>\n                            </div>\n                        </div>\n\n                        <div class=\"d-flex align-items-baseline mb-2\">\n                            <button type=\"submit\" class=\"btn btn-success ml-auto border\"\n                                [disabled]=\"!shouldEnableUploadBtn\">Upload</button>\n\n                            <!-- cartfile status -->\n                            <!-- <label class=\"ml-auto d-flex align-items-center text-secondary\"\n                                *ngIf=\"cartFileStatus == 'building'\">\n                                <mat-spinner class=\"mr-1\" diameter=\"18\"></mat-spinner>\n                                Compiling...\n                            </label>\n\n                            <label class=\"ml-auto d-flex align-items-center text-success\"\n                                *ngIf=\"cartFileStatus == 'success'\">\n                                <mat-icon class=\"mr-1\">check_circle_outline</mat-icon>\n                                Done!\n                            </label>\n\n                            <label class=\"ml-auto d-flex align-items-center text-danger\"\n                                *ngIf=\"cartFileStatus == 'failure'\">\n                                <mat-icon class=\"mr-1\">cancel</mat-icon>\n                                Failed!\n                            </label> -->\n                        </div>\n                    </mat-card>\n                </form>\n\n                <div class=\"form-group\">\n                    <label for=\"uploadMethod\">App Upload Method</label>\n                    <select class=\"custom-select cursor-pointer\" id=\"uploadMethod\" aria-describedby=\"uploadMethodNote\"\n                        formControlName=\"upload_method\" aria-label=\"App upload Method\" required>\n                        <option value=\"key\" selected>App Store Connect API (recommended)</option>\n                        <option value=\"credential\">App Store Login Credentials</option>\n                    </select>\n                    <small id=\"uploadMethodNote\" class=\"form-text text-muted\">Whether to upload the app to AppStore with\n                        your AppStore login credentials or with\n                        <a href=\"https://developer.apple.com/documentation/appstoreconnectapi\" target=\"_blank\">App\n                            Store Connect API</a>.\n                    </small>\n                    <small *ngIf=\"staticConfigFormIos.value.upload_method == 'credential'\">\n                        <strong class=\"text-danger\">*NOTE: If you have Two-factor Authentication (2FA) enabled on your App Store account,\n                            upload method will fail using App Store login credentials.\n                        </strong>\n                    </small>\n                </div>\n\n                <!--  upload method: key-->\n                <mat-card *ngIf=\"staticConfigFormIos.value.upload_method == 'key'\" class=\"mb-3\">\n                    <div class=\"form-group\">\n                        <h3>App Store Connect API</h3>\n\n                        <label for=\"appstoreApiIssuer\">Issuer ID</label>\n                        <input type=\"text\" class=\"form-control\" id=\"appstoreApiIssuer\"\n                            formControlName=\"appstore_api_issuer\" aria-describedby=\"appstoreApiIssuerNote\" required>\n                        <small id=\"appstoreApiIssuerNote\" class=\"form-text text-muted\">The Issuer ID for your App Store\n                            Connect API. Obtain this from your\n                            <a href=\"https://appstoreconnect.apple.com/access/api\" target=\"_blank\">\n                                App Store Connect Developer Console.</a>\n                        </small>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"appstoreKey\">App Store Key</label>\n                        <textarea type=\"text\" class=\"form-control\" id=\"appstoreKey\" formControlName=\"appstore_key\"\n                            aria-describedby=\"appstoreKeyNote\" rows=\"4\" required></textarea>\n                        <small id=\"appstoreKeyNote\" class=\"form-text text-muted\">The App Store Connect key. This can be\n                            generated and downloaded only once from your\n                            <a href=\"https://appstoreconnect.apple.com/access/api\" target=\"_blank\">\n                                App Store Connect Developer Console.</a></small>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"appstoreApiKey\">Api Key ID</label>\n                        <input type=\"text\" class=\"form-control\" id=\"appstoreApiKey\" formControlName=\"appstore_api_key\"\n                            aria-describedby=\"appstoreApiKeyNote\" required>\n                        <small id=\"appstoreApiKeyNote\" class=\"form-text text-muted\">The key ID for the generated App\n                            Store Connect key.</small>\n                    </div>\n                </mat-card>\n\n                <!-- upload method: creds -->\n                <mat-card *ngIf=\"staticConfigFormIos.value.upload_method == 'credential'\" class=\"mb-3\">\n                    <h3>App Store Login Credentials</h3>\n                    <div class=\"form-group\">\n                        <label for=\"appstoreUsername\">App Store Username</label>\n                        <input type=\"text\" class=\"form-control\" id=\"appstoreUsername\"\n                            formControlName=\"appstore_username\" aria-describedby=\"appstoreUsernameNote\" required>\n                        <small id=\"appstoreUsernameNote\" class=\"form-text text-muted\">The App Store username for this\n                            project.</small>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"appstorePword\">App Store Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"appstorePword\"\n                            formControlName=\"appstore_password\" aria-describedby=\"appstorePwordNote\" required>\n                        <small id=\"appstorePwordNote\" class=\"form-text text-muted\">The App Store password for this\n                            project.</small>\n                        <!-- <div class=\"form-group form-check\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"regShowPword\"\n                                (change)=toggleShowPword()>\n                            <label class=\"form-check-label\" for=\"regShowPword\">Show password</label>\n                        </div> -->\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"appstoreBundleId\">App Store Bundle ID(s)</label>\n                        <textarea type=\"text\" class=\"form-control\" id=\"appstoreBundleId\" formControlName=\"bundle_ids\"\n                            aria-describedby=\"appstoreBundleIdNote\" rows=\"3\"\n                            placeholder=\"e.g. com.company_abc.test_app_dev, com.company_abc.test_app_stg, com.company_abc.test_app_prod\"\n                            required></textarea>\n                        <small id=\"appstoreBundleIdNote\" class=\"form-text text-muted\">The unique bundle identifier for\n                            this project. Separate multiple bundle IDs with a comma.</small>\n                    </div>\n                </mat-card>\n\n                <div class=\"form-group\">\n                    <label for=\"bitcodeOptions\">Bitcode Options</label>\n                    <mat-slide-toggle class=\"ml-2\" id=\"bitcodeOptions\" aria-describedby=\"bitcodeOptionsNote\"\n                        [checked]=\"staticConfigFormIos.value.bitcode_option\" formControlName=\"bitcode_option\">\n                    </mat-slide-toggle>\n                    <small id=\"bitcodeOptionsNote\" class=\"form-text text-muted\">Select to enable Bitcode while\n                        compiling your ipa file for this project (recommended).</small>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"podOptions\">Pod Options</label>\n                    <mat-slide-toggle class=\"ml-2\" id=\"podOptions\" aria-describedby=\"podOptionsNote\"\n                        [checked]=\"staticConfigFormIos.value.pod_option\" formControlName=\"pod_option\">\n                    </mat-slide-toggle>\n                    <small id=\"podOptionsNote\" class=\"form-text text-muted\">Select to enabled CocoaPods for this\n                        project.</small>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"carthageOptions\">Carthage Options</label>\n                    <mat-slide-toggle class=\"ml-2\" id=\"carthageOptions\" aria-describedby=\"carthageOptionsNote\"\n                        [checked]=\"staticConfigFormIos.value.carthage_option\" formControlName=\"carthage_option\">\n                    </mat-slide-toggle>\n                    <small id=\"carthageOptionsNote\" class=\"form-text text-muted\">Select to enabled Carthage for this\n                        project.</small>\n                </div>\n\n                <mat-card class=\"mb-3\">\n                    <div class=\"form-group\">\n                        <label for=\"firebaseOptions\">Firebase Adhoc Deployment</label>\n                        <mat-slide-toggle class=\"ml-2\" id=\"firebaseOptions\" aria-describedby=\"firebaseOptionsNote\"\n                            [checked]=\"staticConfigFormIos.value.firebase_adhoc_option\"\n                            formControlName=\"firebase_adhoc_option\">\n                        </mat-slide-toggle>\n                        <small id=\"firebaseOptionsNote\" class=\"form-text text-muted\">Select this if you need to deploy\n                            the\n                            compiled ipa file via Firebase Ah Hoc Distribution.</small>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"staticConfigFormIos.value.firebase_adhoc_option == true\">\n                        <label for=\"appstoreFirebaseToken\">Firebase Token</label>\n                        <input type=\"text\" class=\"form-control\" id=\"appstoreFirebaseToken\"\n                            formControlName=\"firebase_token\" aria-describedby=\"appstoreFirebaseTokenNote\" required>\n                        <small id=\"appstoreFirebaseTokenNote\" class=\"form-text text-muted\">The Firebase token required\n                            to\n                            authenticate login and distribute from that account. <a\n                                href=\"https://firebase.google.com/docs/cli#cli-ci-systems\" target=\"_blank\">Learn\n                                more.</a></small>\n                    </div>\n                </mat-card>\n\n                <mat-card>\n                    <div class=\"form-group\">\n                        <label for=\"notiChannel\">Notification Channel</label>\n                        <select class=\"custom-select cursor-pointer\" id=\"notiChannel\" aria-describedby=\"notiChannelNote\"\n                            formControlName=\"notification_channel\" aria-label=\"App upload Method\" required>\n                            <option value=\"none\" selected>None</option>\n                            <option value=\"google\">Google Hangouts</option>\n                            <option value=\"teams\">Microsoft Teams</option>\n                            <option value=\"slack\">Slack</option>\n                        </select>\n                        <small id=\"notiChannelNote\" class=\"form-text text-muted\">Send a notification when the job\n                            completes\n                            to your workplace communication channel. Currently supports Google Hangouts, Microsoft\n                            Teams,\n                            and Slack.</small>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"staticConfigFormIos.value.notification_channel != 'none'\">\n                        <label for=\"notiUrl\">Notification Hook URL</label>\n                        <input type=\"text\" class=\"form-control\" id=\"notiUrl\" formControlName=\"notification_hook_url\"\n                            aria-describedby=\"notiUrlNote\" required>\n                        <small id=\"notiUrlNote\" class=\"form-text text-muted\">The name of the Apple signing certificate\n                            for\n                            this project. e.g. Apple Distribution: ABC Company Sdn. Bhd.</small>\n                    </div>\n                </mat-card>\n\n                <button class=\"my-3\" type=\"submit\" class=\"btn btn-primary mt-4\">Submit</button>\n            </form>\n        </mat-card-content>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { DataService } from 'src/app/services/data-service';\nimport { HttpService } from 'src/app/services/http-service';\nimport { GlobalConstants } from 'src/app/utils/global-constants';\nimport { StringsEng } from 'src/app/utils/strings-eng';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-create-project',\n  templateUrl: './create-project.component.html',\n  styleUrls: ['./create-project.component.css'],\n})\nexport class CreateProjectComponent implements OnInit {\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataService: DataService,\n    private httpService: HttpService,\n    private _snackbar: MatSnackBar,\n    private dialogRef: MatDialogRef<CreateProjectComponent>\n  ) {\n    this.createProjForm = this.formBuilder.group({\n      name: '',\n      platform: 'ios', // change to dynamic when available\n    });\n  }\n\n  createProjForm;\n\n  ngOnInit(): void {}\n\n  async createProjFormSubmit(formBody) {\n    this.dataService.setIsLoading(true);\n\n    let resp = await this.httpService.httpPostWithHeader(\n      GlobalConstants.HTTP_CREATE_PROJ_URL,\n      formBody\n    );\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      this._snackbar.open(StringsEng.CREATE_PROJECT_SUCCESS, null, {\n        duration: GlobalConstants.SNACKBAR_DURATION_MID,\n      });\n\n      // close dialog\n      this.dialogRef.close();\n\n      // go to git configs on project creation\n      window.location.href = '/git-configs'\n    }\n  }\n}\n","<mat-dialog-content>\n    <h1>Create New Project</h1>\n    <form [formGroup]=\"createProjForm\" (ngSubmit)=\"createProjFormSubmit(createProjForm.value)\" ngNativeValidate>\n        <div class=\"form-group\">\n            <label for=\"createProjName\">Project Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"createProjName\" formControlName=\"name\"\n                aria-describedby=\"createProjNameNote\" required>\n            <!-- <small id=\"createProjNameNote\" class=\"form-text text-muted\"></small> -->\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Create</button>\n    </form>\n</mat-dialog-content>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormArray } from '@angular/forms';\nimport { SchemeGet, Environment } from 'src/app/models/ios-env-configs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { StringsEng } from 'src/app/utils/strings-eng';\nimport { GlobalConstants } from 'src/app/utils/global-constants';\nimport { DataService } from 'src/app/services/data-service';\nimport { HttpService } from 'src/app/services/http-service';\n\n@Component({\n  selector: 'app-env-details',\n  templateUrl: './env-details.component.html',\n  styleUrls: ['./env-details.component.css'],\n})\nexport class EnvDetailsComponent implements OnInit {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private formBuilder: FormBuilder,\n    private _snackbar: MatSnackBar,\n    private dataService: DataService,\n    private httpService: HttpService\n  ) {}\n  currentProjectId: string;\n  currentProjectPlatform: string;\n\n  // for form\n  envConfigsFormIos = this.getInitialFormBuilder();\n  private getInitialFormBuilder() {\n    return this.formBuilder.group({\n      scheme_name: '',\n      project_id: '',\n      settings: this.formBuilder.array([]),\n    });\n  }\n  get settings() {\n    return this.envConfigsFormIos.get('settings') as FormArray;\n  }\n  addSettings(env: Environment) {\n    this.settings.push(\n      this.formBuilder.group({\n        scheme_id: env.scheme_id,\n        environment: env.name,\n        scheme: this.envConfigsFormIos.value.scheme_name,\n        firebase_id: env.firebase_id,\n      })\n    );\n  }\n\n  removeSettings(setting) {\n    this.settings.removeAt(\n      this.settings.value.findIndex((stg) => stg === setting)\n    );\n  }\n\n  removeSettingsBasedOnId(schemeId) {\n    this.settings.removeAt(\n      this.settings.value.findIndex((stg) => stg.scheme_id === schemeId)\n    );\n  }\n\n  ngOnInit(): void {\n    // set global vars first\n    this.currentProjectId = this.data.project_id;\n    this.currentProjectPlatform = this.data.project_platform;\n\n    let scheme = this.data.scheme as SchemeGet;\n\n    // transfer single data to form\n    this.envConfigsFormIos.patchValue({\n      scheme_name: scheme ? scheme.scheme : null,\n      project_id: this.currentProjectId,\n    });\n\n    // only add stuff to form if got scheme\n    if (scheme == null) return;\n\n    // loop add data to form\n    scheme.environment.forEach((env) => {\n      this.addSettings(env);\n    });\n\n    console.log(this.settings.controls);\n  }\n\n  addNewEnvBtn() {\n    this.addSettings({\n      name: '',\n      scheme_id: null,\n      firebase_id: '',\n    });\n  }\n\n  removeEnvBtn(formEnvSetting) {\n    let schemeId = formEnvSetting.value.scheme_id\n    // show alert first\n    if (confirm(StringsEng.ENV_DELETE_CONFIRM)) {      \n      // just remove ui if null\n      if (schemeId == null) this.removeSettings(formEnvSetting.value);\n      else this.deleteEnvConfigs(schemeId);\n    }\n  }\n\n  async submitEnvConfigs(formBody) {\n    // click on addNewEnvBtn if no settings\n    if (this.settings.length <= 0) {\n      this.addNewEnvBtn();\n\n      // show snackbar\n      this._snackbar.open(StringsEng.ENV_SETTINGS_EMPTY, null, {\n        duration: GlobalConstants.SNACKBAR_DURATION_MID,\n      });\n      return;\n    }\n\n    // update scheme name for each settings item in formBody\n    if (formBody.scheme_name != null)\n      formBody.settings.forEach((setting) => {\n        setting.scheme = formBody.scheme_name;\n      });\n\n    // remove \"scheme_name\" from formBody\n    delete formBody.scheme_name;\n\n    console.log(formBody);\n\n    // do http post\n    this.dataService.setIsLoading(true);\n\n    // choose url based on project platform\n    var postEnvConfigURL: string;\n    if (this.currentProjectPlatform == 'ios')\n      postEnvConfigURL = GlobalConstants.HTTP_SET_IOS_ENV_CONFIG_URL;\n    else return; // no android yet\n\n    let resp = await this.httpService.httpPostWithHeader(\n      postEnvConfigURL,\n      formBody\n    );\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      this._snackbar.open(StringsEng.SET_ENV_CONFIG_SUCCESS, null, {\n        duration: GlobalConstants.SNACKBAR_DURATION_MID,\n      });\n\n      window.location.reload();\n    }\n  }\n\n  async deleteEnvConfigs(schemeId: string) {\n    // create formBody from scheme_id\n    let formBody = {\n      scheme_ids: [schemeId],\n    };\n\n    // do http post\n    this.dataService.setIsLoading(true);\n\n    // choose url based on project platform\n    var deleteEnvConfigURL: string;\n    if (this.currentProjectPlatform == 'ios')\n      deleteEnvConfigURL = GlobalConstants.HTTP_DELETE_IOS_ENV_CONFIG_URL;\n    else return; // no android yet\n\n    let resp = await this.httpService.httpPostWithHeader(\n      deleteEnvConfigURL,\n      formBody\n    );\n\n    this.dataService.setIsLoading(false);\n\n    if (resp.success) {\n      this._snackbar.open(StringsEng.ENV_DELETE_SUCCESS, null, {\n        duration: GlobalConstants.SNACKBAR_DURATION_MID,\n      });\n\n      // delete item from main form as well\n      this.removeSettingsBasedOnId(schemeId)\n    }\n  }\n}\n","<mat-dialog-content>\n    <form [formGroup]=\"envConfigsFormIos\" (ngSubmit)=\"submitEnvConfigs(envConfigsFormIos.value)\" ngNativeValidate>\n        <div class=\"form-group\">\n            <label for=\"gitUrlInput\">Scheme Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"schemeName\" aria-describedby=\"gitRepoURL\"\n                formControlName=\"scheme_name\" placeholder=\"e.g. abc_app_merchant\" required>\n        </div>\n\n        <!-- dynamic form based on scheme environment -->\n        <div formArrayName=\"settings\">\n            <mat-card *ngFor=\"let envSetting of settings.controls; let i = index\" class=\"mb-3\">\n                <!-- remove btn on top right -->\n                <mat-icon class=\"mb-3 cursor-pointer\" (click)=\"removeEnvBtn(envSetting)\" style=\"float: right;\">close</mat-icon>\n\n                <div [formArrayName]=\"i\">\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\">Environment Name</span>\n                            </div>\n                            <input type=\"text\" class=\"form-control\" id=\"envName-{{scheme_id}}\" aria-describedby=\"teamCertNote\"\n                                formControlName=\"environment\" placeholder=\"e.g. staging\" required>\n                        </div>\n                    </div>\n                    <div class=\"input-group\">\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\">Firebase App ID</span>\n                        </div>\n                        <textarea class=\"form-control\" aria-label=\"With textarea\" id=\"firebaseId-{{scheme_id}}\"\n                            formControlName=\"firebase_id\" required></textarea>\n                    </div>\n                </div>\n            </mat-card>\n        </div>\n\n        <!-- add new env btn -->\n        <div class=\"d-flex\">\n            <button class=\"my-3\" type=\"button\" class=\"btn btn-light mx-auto border\" (click)=\"addNewEnvBtn()\">\n                + Add New Environment\n            </button>\n        </div>\n\n        <button class=\"my-3\" type=\"submit\" class=\"btn btn-primary mt-4\">Submit</button>\n    </form>\n</mat-dialog-content>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { DataService } from 'src/app/services/data-service';\nimport { HttpService } from 'src/app/services/http-service';\nimport { GlobalConstants } from 'src/app/utils/global-constants';\nimport { StringsEng } from 'src/app/utils/strings-eng';\nimport { Subscription } from 'rxjs';\nimport { Project } from 'src/app/models/project';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EnvDetailsComponent } from 'src/app/components/environments/env-details/env-details.component';\nimport { EnvConfigsIosGet, SchemeGet } from 'src/app/models/ios-env-configs';\n\n@Component({\n  selector: 'app-env-list',\n  templateUrl: './env-list.component.html',\n  styleUrls: ['./env-list.component.css'],\n})\nexport class EnvListComponent implements OnInit, OnDestroy {\n  currentProjectId: string;\n  currentProjectPlatform: string;\n\n  // observables (destroy onDestroy)\n  private currentProjSub: Subscription;\n\n  envConfigsIos: EnvConfigsIosGet;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataService: DataService,\n    private httpService: HttpService,\n    private _snackbar: MatSnackBar,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    // subscribe to current proj\n    this.currentProjSub = this.dataService.currentProjectObs.subscribe(\n      (project: Project) => {\n        if (project != null) {\n          this.currentProjectId = project.project_id;\n          this.currentProjectPlatform = project.platform;\n\n          // get env list\n          this.getEnvConfigs();\n        }\n      }\n    );\n  }\n\n  async getEnvConfigs() {\n    // choose url based on project platform\n    var getEnvConfigsURL: string;\n    if (this.currentProjectPlatform == 'ios')\n      getEnvConfigsURL = GlobalConstants.HTTP_GET_IOS_ENV_CONFIG_URL(\n        this.currentProjectId\n      );\n    else return; // no android yet\n\n    let resp = await this.httpService.httpGetWithHeader(getEnvConfigsURL, true);\n\n    if (resp.success) {\n      // insert data to form\n      if (this.currentProjectPlatform == 'ios') {\n        this.envConfigsIos = resp.data as EnvConfigsIosGet;\n      } else return;\n    }\n  }\n\n  openEnvDetailsDialog(scheme: SchemeGet) {\n    this.dialog.open(EnvDetailsComponent, {\n      data: {\n        project_id: this.currentProjectId,\n        project_platform: this.currentProjectPlatform,\n        scheme: scheme,\n      },\n    });\n  }\n\n  createNewScheme() {\n    this.dialog.open(EnvDetailsComponent, {\n      data: {\n        project_id: this.currentProjectId,\n        project_platform: this.currentProjectPlatform,\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.currentProjSub.unsubscribe();\n  }\n}\n","<div class=\"row p-3\" *ngIf=\"currentProjectId != null\">\n    <div class=\"col pb-3\">\n        <h1>Project Environments</h1>\n        <p>Configure your project schemes and environments here. You can have multiple schemes within a single project,\n            while each scheme can have multiple environments to deploy in.\n        </p>\n\n        <mat-card-content class=\"mt-4\" *ngIf=\"envConfigsIos != null\">\n            <!-- schema items -->\n            <mat-card class=\"p-4 mb-4\" *ngFor=\"let scheme of envConfigsIos.environment_settings\">\n                <div class=\"d-flex align-items-center\">\n                    <h2 class=\"\">{{scheme.scheme}}</h2>\n                    <button type=\"button\" class=\"btn btn-light ml-auto border\"\n                        (click)=\"openEnvDetailsDialog(scheme)\">Edit</button>\n                </div>\n                <div class=\"form-group\" *ngFor=\"let env of scheme.environment\">\n                    <strong><label for=\"basic-url\">{{env.name}}</label></strong>\n                    <div class=\"input-group\">\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\">Firebase App ID</span>\n                        </div>\n                        <textarea class=\"form-control\" aria-label=\"With textarea\"\n                            readonly>{{env.firebase_id}}</textarea>\n                    </div>\n                </div>\n            </mat-card>\n\n            <!-- add scheme -->\n            <button type=\"button\" class=\"btn btn-primary mb-4\" (click)=\"createNewScheme()\">Create New Scheme</button>\n        </mat-card-content>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from 'src/app/services/http-service';\nimport { GlobalConstants } from 'src/app/utils/global-constants';\nimport { LocalStorageService } from 'src/app/services/local-storage-service';\nimport { DataService } from 'src/app/services/data-service';\nimport { Project } from 'src/app/models/project';\nimport { Subscription } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateProjectComponent } from 'src/app/components/create-project/create-project.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(\n    private httpService: HttpService,\n    private localStorageService: LocalStorageService,\n    private dataService: DataService,\n    private dialog: MatDialog,\n    private router: Router\n  ) {}\n  //=== projects\n  currentProject: Project;\n  projectList: Project[];\n\n  // obs\n  private currentProjSub: Subscription\n\n  ngOnInit(): void {\n    this.getProjectList();\n\n    this.currentProjSub = this.dataService.currentProjectObs.subscribe(\n      (project) => (this.currentProject = project)\n    );\n  }\n\n  //=== http calls\n  async getProjectList() {\n    let resp = await this.httpService.httpGetWithHeader(\n      GlobalConstants.HTTP_GET_PROJ_LIST_URL,\n      true\n    );\n\n    if (resp.success) {\n      this.projectList = resp.data.project_list;\n\n      // set current project if not selected yet\n      var currentProject = this.localStorageService.getCurrentProject();\n\n      if (currentProject == null) currentProject = this.projectList[0];\n\n      this.dataService.setCurrentProject(currentProject, false);\n    }\n  }\n\n  async logout() {\n    this.dataService.setIsLoading(true);\n\n    let resp = await this.httpService.httpGetWithHeader(\n      GlobalConstants.HTTP_LOGOUT_URL\n    );\n\n    if (resp.success) {\n      // clear local storage on logout\n      this.localStorageService.clearLocalStorage()\n\n      // navigate to login page\n      window.location.href = '/login';\n    } else {\n      this.dataService.setIsLoading(false);\n    }\n  }\n\n  //=== normal funcs\n  createProjectOnClick() {\n    this.dialog.open(CreateProjectComponent, {disableClose: false});\n  }\n\n  projectOnClick(project: Project) {\n    // set current project\n    this.dataService.setCurrentProject(project, true);\n    this.localStorageService.storeCurrentProject(project);\n\n    // go to git configs if in build details\n    // console.log(\"router = \", this.router.url[0])\n    // if (this.router.url)\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.currentProjSub.unsubscribe();\n  }\n}\n","<!-- toolbar -->\n<mat-toolbar color=\"primary\">\n    <button mat-icon-button class=\"btn text-white\" mat-button (click)=\"drawer.toggle()\" aria-label=\"menu\">\n        <mat-icon>menu</mat-icon>\n    </button>\n\n    <span>Mobile CI</span>\n\n    <!-- welcome, user -->\n    <span class=\"ml-auto text-small\">Welcome</span>\n\n    <!-- profile icon + dropdown -->\n    <button mat-icon-button [matMenuTriggerFor]=\"menuProfile\" class=\"btn text-white\" aria-label=\"profile\">\n        <mat-icon>account_circle</mat-icon>\n    </button>\n    <mat-menu #menuProfile=\"matMenu\">\n        <!-- <a class=\"dropdown-item cursor-pointer\" routerLink=\"\">Profile</a> -->\n        <a class=\"dropdown-item cursor-pointer\" (click)=\"logout()\">Logout</a>\n    </mat-menu>\n</mat-toolbar>\n\n<!-- main content + side nav -->\n<mat-drawer-container class=\"nav-container position-fixed\" autosize>\n    <!-- side nav drawer -->\n    <mat-drawer #drawer class=\"nav-sidenav\" mode=\"side\" opened=\"true\">\n        <mat-list>\n            <mat-list-item class=\"mb-2 cursor-pointer border rounded-pill\" [matMenuTriggerFor]=\"menuProjList\">\n                <div class=\"w-100 d-flex align-items-center\">\n                    <strong> {{currentProject? currentProject.name : 'Create New Project'}} </strong>\n                    <mat-icon class=\"ml-auto\">arrow_drop_down</mat-icon>\n                </div>\n            </mat-list-item>\n\n            <!-- projects list dropdown -->\n            <mat-menu class=\"px-2\" #menuProjList=\"matMenu\">\n                <a *ngFor=\"let project of projectList\" class=\"dropdown-item cursor-pointer d-flex align-items-center\"\n                    (click)=\"projectOnClick(project)\">\n                    <!-- <img class=\"\" src=\"assets/img/{{project.platform}}-logo.png\" style=\"width:20px; height: 20px;\"> -->\n                    <h3 class=\"mx-2 my-0\">{{project.name}}</h3>\n                </a>\n\n                <mat-divider *ngIf=\"projectList? projectList.length > 0 : false\"></mat-divider>\n                <a class=\"dropdown-item cursor-pointer d-flex align-items-center\"\n                    (click)=\"createProjectOnClick()\">\n                    <strong>+ Create New Project</strong>\n                </a>\n            </mat-menu>\n\n            <div *ngIf=\"currentProject != null\">\n                <mat-list-item class=\"cursor-pointer\" [routerLink]=\"['/git-configs']\">\n                    <a routerLinkActive=\"active-link\">Git Configs</a>\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item class=\"cursor-pointer\" [routerLink]=\"['/static-configs']\">\n                    <a routerLinkActive=\"active-link\">Project Static Configs</a>\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item class=\"cursor-pointer\" [routerLink]=\"['/environments']\">\n                    <a routerLinkActive=\"active-link\">Project Environments</a>\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item class=\"cursor-pointer\" [routerLink]=\"['/build-template']\">\n                    <a routerLinkActive=\"active-link\">Build Template</a>\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item class=\"cursor-pointer\" [routerLink]=\"['/build-history']\">\n                    <a routerLinkActive=\"active-link\">Build History</a>\n                </mat-list-item>\n                <mat-divider></mat-divider>\n            </div>\n        </mat-list>\n    </mat-drawer>\n\n    <!-- main content -->\n    <router-outlet></router-outlet>\n\n    <!-- fab - create new build -->\n    <!-- <button [matMenuTriggerFor]=\"menuCreateBuild\" class=\"fab-btm-right\" mat-fab color=\"primary\" aria-label=\"Create project\">\n        <mat-icon>add</mat-icon>\n    </button>\n    <mat-menu #menuCreateBuild=\"matMenu\">\n        <a class=\"dropdown-item cursor-pointer\" (click)=\"createNewBuildOnClick()\">Create New Build</a>\n    </mat-menu> -->\n\n</mat-drawer-container>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { LocalStorageService } from 'src/app/services/local-storage-service';\nimport { DataService } from 'src/app/services/data-service';\nimport { HttpService } from 'src/app/services/http-service';\nimport { GlobalConstants } from 'src/app/utils/global-constants';\nimport { StringsEng } from 'src/app/utils/strings-eng';\nimport { Project } from 'src/app/models/project';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(\n    private formBuilder: FormBuilder,\n    private httpService: HttpService,\n    private dataService: DataService,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {\n    this.loginForm = this.formBuilder.group({\n      client_id: GlobalConstants.XMPP_CLIENT_ID,\n      client_secret: GlobalConstants.XMPP_CLIENT_SECRET,\n      email: '',\n      password: '',\n    });\n\n    this.regForm = this.formBuilder.group({\n      client_id: GlobalConstants.XMPP_CLIENT_ID,\n      client_secret: GlobalConstants.XMPP_CLIENT_SECRET,\n      email: '',\n      password: '',\n    });\n  }\n\n  loginForm;\n  regForm;\n  shouldShowPword = false;\n\n  ngOnInit(): void {\n    // redirect to homepage if got access token already\n    if (this.localStorageService.getAccessToken() != null)\n      this.router.navigate(['/']);\n  }\n\n  async loginFormOnSubmit(formBody) {\n    this.dataService.setIsLoading(true);\n\n    let resp = await this.httpService.httpPostNoHeader(\n      GlobalConstants.HTTP_LOGIN_URL,\n      formBody\n    );\n\n    // save access token then navigate to home\n    if (resp.success) {\n      this.localStorageService.storeValueToLocalStorage(\n        GlobalConstants.LS_KEY_ACCESS_TOKEN,\n        resp.data.access_token\n      );\n\n      // set first project in list as project id\n      let firstProject = resp.data.project_list[0] as Project;\n\n      this.dataService.setCurrentProject(firstProject, false);\n\n      window.location.href = '/';\n    } else {\n      this.dataService.setIsLoading(false);\n    }\n  }\n\n  toggleShowPword() {\n    this.shouldShowPword = !this.shouldShowPword;\n  }\n\n  async regFormOnSubmit(formBody) {\n    this.dataService.setIsLoading(true);\n\n    let resp = await this.httpService.httpPostNoHeader(\n      GlobalConstants.HTTP_REG_URL,\n      formBody\n    );\n\n    this.dataService.setIsLoading(false);\n\n    // show dialog if successful\n    if (resp.success) {\n      alert(StringsEng.REG_SUCCESS);\n      location.reload();\n    }\n  }\n}\n","<!-- <div class=\"h-100 row align-items-center\"> -->\n<mat-card class=\"col-10 col-sm-6 col-md-5 col-lg-4 mx-auto my-4\">\n    <mat-tab-group>\n        <mat-tab label=\"Login\">\n            <mat-card-content class=\"px-2 py-4\">\n                <!-- login -->\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginFormOnSubmit(loginForm.value)\" ngNativeValidate>\n                    <div class=\"form-group\">\n                        <label for=\"loginEmail\">Email address</label>\n                        <input type=\"email\" class=\"form-control\" id=\"loginEmail\" formControlName=\"email\"\n                            aria-describedby=\"loginEmailNote\" required>\n                        <small id=\"loginEmailNote\" class=\"form-text text-muted\">We'll never share your email with\n                            anyone\n                            else.</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"loginPword\">Password</label>\n                        <input type=\"password\" class=\"form-control\" formControlName=\"password\" id=\"loginPword\"\n                            minlength=\"8\" maxlength=\"20\" required>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n                </form>\n            </mat-card-content>\n        </mat-tab>\n\n        <mat-tab label=\"Register\">\n            <mat-card-content class=\"px-2 py-4\">\n                <!-- registration -->\n                <form [formGroup]=\"regForm\" (ngSubmit)=\"regFormOnSubmit(regForm.value)\" ngNativeValidate>\n                    <div class=\"form-group\">\n                        <label for=\"regEmail\">Email address</label>\n                        <input type=\"email\" class=\"form-control\" id=\"regEmail\" formControlName=\"email\"\n                            aria-describedby=\"regEmailNote\" required>\n                        <small id=\"regEmailNote\" class=\"form-text text-muted\">We'll never share your email with\n                            anyone\n                            else.</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"regPword\">Password</label>\n                        <input type=\"{{shouldShowPword? 'text':'password'}}\" class=\"form-control\"\n                            formControlName=\"password\" id=\"regPword\" minlength=\"8\" maxlength=\"20\"\n                            pattern=\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[,.#?!@$%^&*-]).{8,}$\" required>\n                        <small id=\"\" class=\"form-text text-muted\">Password must have at least 8 characters, contain\n                            upper case, lower case characters, numbers, and symbols (e.g.: Testing123!)</small>\n                    </div>\n\n                    <div class=\"form-group form-check\">\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"regShowPword\" (change)=toggleShowPword()>\n                        <label class=\"form-check-label\" for=\"regShowPword\">Show password</label>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                </form>\n            </mat-card-content>\n        </mat-tab>\n    </mat-tab-group>\n</mat-card>\n<!-- </div> -->","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Project } from '../models/project';\n\n@Injectable()\nexport class DataService {\n  constructor() {}\n\n  //=== app component\n  // for loading animation\n  private isLoadingSource = new BehaviorSubject(false);\n  isLoadingObs = this.isLoadingSource.asObservable();\n  setIsLoading(isLoading: boolean) {\n    this.isLoadingSource.next(isLoading);\n  }\n\n  //=== home component\n  // current selected project id\n  private currentProjectSource = new BehaviorSubject(null);\n  currentProjectObs = this.currentProjectSource.asObservable();\n  setCurrentProject(project: Project, shouldOverwrite: boolean) {\n    // overwrite current project if need\n    if (shouldOverwrite) this.currentProjectSource.next(project);\n    else if (this.currentProjectSource.getValue() == null)\n      this.currentProjectSource.next(project);\n  }\n  getCurrentProject(): Project {\n    return this.currentProjectSource.getValue();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConstants } from '../utils/global-constants';\nimport { StringsEng } from '../utils/strings-eng';\nimport { LocalStorageService } from '../services/local-storage-service';\n\n@Injectable()\nexport class HttpService {\n  constructor(\n    private localStorageService: LocalStorageService,\n    private http: HttpClient,\n    private router: Router,\n    private _snackbar: MatSnackBar\n  ) {}\n\n  //=== NO ACCESS TOKEN\n  public async httpPostNoHeader(\n    endpoint: string,\n    body: any,\n    shouldHideErrors?: boolean\n  ): Promise<HttpResp> {\n    var fullURL = GlobalConstants.HTTP_BASE_URL + endpoint;\n\n    let json = JSON.stringify(body);\n\n    console.log('$endpoint: json', json);\n\n    var resp;\n\n    // do sync http post\n    await this.http\n      .post<any>(fullURL, json)\n      .toPromise()\n      .then((data) => {\n        resp = {\n          success: true,\n          data: data,\n          error: null,\n        };\n      })\n      .catch((error) => {\n        resp = {\n          success: false,\n          data: null,\n          error: error,\n        };\n      });\n\n    console.log('resp', resp);\n\n    this.handleHttpErrorResp(resp, shouldHideErrors);\n\n    return resp;\n  }\n\n  //=== WITH ACCESS TOKEN\n  public async httpGetWithHeader(\n    endpoint: string,\n    shouldHideErrors?: boolean,\n    baseUrl?: string,\n    isPlainText?: boolean\n  ): Promise<HttpResp> {\n    var fullURL =\n      (baseUrl ? baseUrl : GlobalConstants.HTTP_BASE_URL) + endpoint;\n    var resp;\n\n    var httpHeaders = new HttpHeaders({\n      Authorization: 'Bearer ' + this.getAccessToken(),\n    });\n\n    // append plain text header if needed\n    // if (isPlainText == true)\n    //   httpHeaders.append('Content-Type', 'text/plain; charset=utf-8');\n\n    // do sync http post\n    await this.http\n      .get(fullURL, {\n        headers: httpHeaders,\n        responseType: isPlainText == true ? 'text' : null,\n      })\n      .toPromise()\n      .then((data) => {\n        resp = {\n          success: true,\n          data: data,\n          error: null,\n        };\n      })\n      .catch((error) => {\n        resp = {\n          success: false,\n          data: null,\n          error: error,\n        };\n      });\n\n    console.log(`httpGetWithHeader ${endpoint} resp`, resp);\n\n    this.handleHttpErrorResp(resp, shouldHideErrors);\n\n    return resp;\n  }\n\n  public async httpPostWithHeader(\n    endpoint: string,\n    body: any,\n    shouldHideErrors?: boolean\n  ): Promise<HttpResp> {\n    var fullURL = GlobalConstants.HTTP_BASE_URL + endpoint;\n\n    let json = JSON.stringify(body);\n\n    console.log('json', json);\n\n    var resp;\n\n    var httpHeaders = new HttpHeaders({\n      Authorization: 'Bearer ' + this.getAccessToken(),\n    });\n\n    // do sync http post\n    await this.http\n      .post<any>(fullURL, json, { headers: httpHeaders })\n      .toPromise()\n      .then((data) => {\n        resp = {\n          success: true,\n          data: data,\n          error: null,\n        };\n      })\n      .catch((error) => {\n        resp = {\n          success: false,\n          data: null,\n          error: error,\n        };\n      });\n\n    console.log('resp', resp);\n\n    this.handleHttpErrorResp(resp, shouldHideErrors);\n\n    return resp;\n  }\n\n  public async httpPostFormDataWithHeader(\n    endpoint: string,\n    formData: FormData,\n    shouldHideErrors?: boolean\n  ): Promise<HttpResp> {\n    var fullURL = GlobalConstants.HTTP_BASE_URL + endpoint;\n\n    // log form data for chrome and firefox dev\n    // for (var pair of formData.entries()) {\n    //   console.log(pair[0] + ', ' + pair[1]);\n    // }\n\n    var resp;\n\n    var httpHeaders = new HttpHeaders({\n      // 'Content-Type': undefined,\n      Authorization: 'Bearer ' + this.getAccessToken(),\n    });\n\n    // do sync http post\n    await this.http\n      .post<any>(fullURL, formData, { headers: httpHeaders })\n      .toPromise()\n      .then((data) => {\n        resp = {\n          success: true,\n          data: data,\n          error: null,\n        };\n      })\n      .catch((error) => {\n        resp = {\n          success: false,\n          data: null,\n          error: error,\n        };\n      });\n\n    console.log('resp', resp);\n\n    this.handleHttpErrorResp(resp, shouldHideErrors);\n\n    return resp;\n  }\n\n  getAccessToken(): string {\n    // add access token to header\n    var accessToken = this.localStorageService.getValueFromLocalStorage(\n      GlobalConstants.LS_KEY_ACCESS_TOKEN\n    );\n    if (accessToken == null) {\n      this.router.navigate(['/login']);\n    }\n\n    return accessToken;\n  }\n\n  handleHttpErrorResp(resp, shouldHideErrors: boolean) {\n    // handle errors\n    if (resp.success != true) {\n      let errorStatusCode = resp.error.status;\n\n      // show error snackbar first\n      if (errorStatusCode == 400) {\n        // 400 - common errors, use error msg\n        if (shouldHideErrors != true)\n          this.showHttpSnackbar(StringsEng.getString(resp.error.error.message));\n      } else {\n        // others - generic errors, use error status code\n        if (shouldHideErrors != true)\n          this.showHttpSnackbar(\n            StringsEng.getString('E_HTTP_' + resp.error.status)\n          );\n      }\n\n      // handle any operations other than snackbar\n      switch (resp.error.status) {\n        case 401: // unauthorized (redirect to login page)\n          // clear local storage (simulate logout)\n          this.localStorageService.clearLocalStorage();\n\n          window.location.href = '/';\n          break;\n\n        // case 404: // API not found\n        //   break;\n\n        // case 400: // common errors\n        //   break;\n\n        // case 500: // internal server error\n        //   break;\n      }\n    }\n  }\n\n  showHttpSnackbar(message: string) {\n    this._snackbar.open(message, null, {\n      duration: GlobalConstants.SNACKBAR_DURATION_MID,\n    });\n  }\n}\n\n// data model for response\nexport interface HttpResp {\n  success: boolean;\n  data: any;\n  error: HttpErrorResponse;\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { LOCAL_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { GlobalConstants } from 'src/app/utils/global-constants';\nimport { Project } from 'src/app/models/project';\n\n@Injectable()\nexport class LocalStorageService {\n  anotherTodolist = [];\n  constructor(@Inject(LOCAL_STORAGE) private storage: StorageService) {}\n\n  //=== global funcs\n  public getValueFromLocalStorage(localStorageKey: string): any {\n    return this.storage.get(localStorageKey);\n  }\n\n  public storeValueToLocalStorage(localStorageKey: string, stringValue: any) {\n    this.storage.set(localStorageKey, stringValue);\n  }\n\n  public clearLocalStorage() {\n    this.storage.clear()\n  }\n\n  //=== get specific keys\n  public getAccessToken(): string {\n    return this.storage.get(GlobalConstants.LS_KEY_ACCESS_TOKEN);\n  }\n\n  public getCurrentProject(): Project {\n    return this.storage.get(GlobalConstants.LS_KEY_CURRENT_PROJECT);\n  }\n\n  //=== set specific keys\n  public storeCurrentProject(currentProject: Project) {\n    this.storage.set(GlobalConstants.LS_KEY_CURRENT_PROJECT, currentProject);\n  }\n}\n","export class GlobalConstants {\n  //=== http server configs\n  // 8081 = cloud\n  // 8082 = jos local\n  public static HTTP_BASE_URL = 'http://175.41.155.248:8081/api/v1.0/';\n  // public static JENKINS_BASE_URL = 'http://175.41.155.248:8080';\n  public static XMPP_CLIENT_ID = 'CICD330011CICDp01';\n  public static XMPP_CLIENT_SECRET = 'Npxkillnottoomuch110022yes2';\n\n  //=== local storage\n  public static LS_KEY_ACCESS_TOKEN: string = 'LS_KEY_ACCESS_TOKEN';\n  public static LS_KEY_CURRENT_PROJECT: string = 'LS_KEY_CURRENT_PROJECT';\n\n  //=== http endpoints\n  // registration\n  public static HTTP_REG_URL: string = 'authentication/register';\n  public static HTTP_LOGIN_URL: string = 'authentication/login';\n  public static HTTP_LOGOUT_URL: string = 'authentication/logout';\n\n  // projects\n  public static HTTP_GET_PROJ_LIST_URL: string = 'project/list';\n  public static HTTP_CREATE_PROJ_URL: string = 'project/create';\n\n  // git configs\n  public static HTTP_SET_GIT_CONFIG_URL: string = 'project/git_config';\n  public static HTTP_GET_GIT_CONFIG_URL(projectId: string): string {\n    return `project/git_config/${projectId}`;\n  }\n  public static HTTP_GENERATE_SSH_KEY_URL: string = 'project/generate_ssh_key';\n  public static HTTP_GET_SSH_KEY_URL(projectId: string): string {\n    return `project/get_ssh_key/${projectId}`;\n  }\n\n  // static configs\n  public static HTTP_SET_IOS_STATIC_CONFIG_URL: string =\n    'project/ios_main_config';\n  public static HTTP_GET_IOS_STATIC_CONFIG_URL(projectId: string): string {\n    return `project/ios_main_config/${projectId}`;\n  }\n  public static HTTP_SET_IOS_APP_SIGNING_AUTO_URL: string =\n  'certificate/upload';\n\n  // env configs\n  public static HTTP_SET_IOS_ENV_CONFIG_URL: string =\n    'project/ios_environment_config';\n  public static HTTP_GET_IOS_ENV_CONFIG_URL(projectId: string): string {\n    return `project/ios_environment_config/${projectId}`;\n  }\n  public static HTTP_DELETE_IOS_ENV_CONFIG_URL: string =\n    'project/ios_environment_config/delete';\n\n  // build template\n  public static HTTP_SET_IOS_BUILD_TEMPLATE_URL: string =\n    'project/ios_build_config';\n  public static HTTP_GET_IOS_BUILD_TEMPLATE_URL(projectId: string): string {\n    return `project/ios_build_config/${projectId}`;\n  }\n  public static HTTP_GET_IOS_BUILD_TEMPLATE_OPTIONS_URL(\n    projectId: string\n  ): string {\n    return `project/ios_template_option/${projectId}`;\n  }\n\n  // build history/details\n  public static HTTP_GET_BUILD_HISTORY_URL(\n    projectId: string,\n    offset: number\n  ): string {\n    return `cicd/build/${projectId}?offset=${offset}`;\n  }\n  public static HTTP_GET_BUILD_DETAILS_URL(buildId: string): string {\n    return `cicd/build/id/${buildId}`;\n  }\n\n  // create / rebuild / stop build\n  public static HTTP_CREATE_BUILD_URL: string = 'cicd/build';\n  public static HTTP_REBUILD_URL: string = 'cicd/rebuild';\n  public static HTTP_STOP_BUILD_URL: string = 'cicd/build/stop';\n\n  // jenkins\n  public static HTTP_GET_JENKINS_BUILD_NUMBER_URL(buildId: string): string {\n    return `cicd/build/id/${buildId}?query=build_no`;\n  }\n\n  // console output\n  public static HTTP_GET_CONSOLE_OUTPUT_URL(buildId: string, platform: string, jenkinsBuildNumber: string): string {\n    return `cicd/build/log/${buildId}?platform=${platform}&jenkins_build_number=${jenkinsBuildNumber}`;\n  }\n\n  // build number\n  public static HTTP_GET_BUILD_NUMBER_URL(projectId: string): string {\n    return `project/build_number/${projectId}`;\n  }\n  public static HTTP_SET_BUILD_NUMBER_URL: string = 'project/build_number';\n\n  // cartfile\n  public static HTTP_SET_IOS_CARTFILE_URL: string = 'carthage/build/upload';\n  public static HTTP_GET_IOS_CARTFILE_URL(\n    projectId: string,\n    folderName: string\n  ): string {\n    return `carthage/project/${projectId}/folder/${folderName}`;\n  }\n\n  //=== snackbar durations\n  public static SNACKBAR_DURATION_SHORT = 2000;\n  public static SNACKBAR_DURATION_MID = 3000;\n  public static SNACKBAR_DURATION_LONG = 4000;\n\n  //=== build type\n  public static BUILD_TYPE_NEW_BUILD = 'BUILD_TYPE_NEW_BUILD';\n  public static BUILD_TYPE_REBUILD = 'BUILD_TYPE_REBUILD';\n}\n","export class StringsEng {\n  public static getString(stringId: string) {\n    if (this[stringId] == null)\n      return StringsEng.E_HTTP_GENERIC + ' (' + stringId + ')';\n    else return this[stringId];\n  }\n\n  //=== http generic errors\n  public static E_HTTP_GENERIC =\n    'Something went wrong, please contact support or try again later.';\n  public static E_HTTP_401 =\n    'You have been logged out due to inactivity, please login again.';\n  public static E_HTTP_404 =\n    'Error 404: Not Found. Please contact support or try again later.';\n  public static E_HTTP_500 =\n    'Error 500: Internal Server Error. Please contact support or try again later.';\n\n  //=== http error codes (statusCode 400)\n  public static E_INVALID_CLIENT =\n    'Invalid client credentials, please contact support.';\n  public static E_VERIFY_ACCOUNT =\n    'Account not verified, please wait for admin to approve or contact support.';\n\n  //=== registration/login\n  public static REG_SUCCESS =\n    'Registration successful! Please check your e-mail to verify, thank you.';\n  public static E_INVALID_PASSWORD =\n    'Invalid email or password, please try again';\n\n  //=== projects\n  public static CREATE_PROJECT_SUCCESS = 'Project created successfully';\n\n  //=== git configs\n  public static SET_GIT_CONFIG_SUCCESS = 'Git configs updated successfully';\n  public static GENERATE_SSH_CONFIRM =\n    \"Generate new SSH key? The previous SSH key will be invalidated, and you'll have to copy/paste it into your Git project repository again.\";\n  public static SSH_KEY_COPIED = 'SSH Key copied to clipboard!';\n  public static SSH_KEY_EMPTY =\n    'Please make sure you have generated SSH key at least once and copied it to your Git project repository.';\n\n  //=== env configs\n  public static SET_ENV_CONFIG_SUCCESS =\n    'Project scheme and environments updated successfully.';\n  public static ENV_SETTINGS_EMPTY =\n    'Please add at least one environment to your scheme.';\n  public static ENV_DELETE_CONFIRM =\n    'Are you sure you want to delete this environment from your scheme? This action cannot be undone.';\n  public static ENV_DELETE_SUCCESS = 'Scheme environment deleted successfully.';\n\n  //=== static configs\n  public static SET_STATIC_CONFIG_SUCCESS =\n    'Project static configs updated successfully.';\n\n  // app signing (auto)\n  public static SET_APP_SIGNING_FILES_SUCCESS =\n    'App signing certificate files updated successfully, please submit the form if you have made changes to signing method (automatic vs. manual).';\n  public static APP_SIGNING_FILES_NULL =\n    'Required app signing files for automatic signing not uploaded yet, please choose the correct files and click on the \"upload\" button.';\n\n  //=== build template\n  public static SET_BUILD_TEMPLATE_SUCCESS =\n    'Build template updated successfully.';\n\n  // cancel build\n  public static CANCEL_BUILD_CONFIRM(buildNumber: string) {\n    return `Are you sure you want to cancel build #${buildNumber}?`;\n  }\n  public static CANCEL_BUILD_SUCCESS(buildNumber: string) {\n    return `Build #${buildNumber} cancelled.`;\n  }\n\n  //cartfile\n  public static SET_CARTFILE_SUCCESS =\n    'Cartfile uploaded successfully, now commencing carthage compilation. You can navigate away during this process.';\n  public static CARTFILE_NULL =\n    'Carthage option is enabled - please choose a cartfile or disable this option in the Project Static Configs.';\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}